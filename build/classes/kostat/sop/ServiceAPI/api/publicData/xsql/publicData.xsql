<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="publicData">

	<!-- 원 영역 반경 내 집계구 -->
	<select id="circleAreaTotInfo" parameterType="hashmap" resultType="hashmap">	
		select 	base_year
		,			tot_reg_cd as adm_cd
		,			sido_cd
		,			sgg_cd
		,			emdong_cd
		,			tot_reg_cd
		,			st_asbinary(bord) geometry
		from 		SRV_PG_TOTREGBORD
		where 	base_year = #{year}
		and		ST_INTERSECTS(ST_BUFFER(ST_POINTFROMTEXT(#{area},0), #{round}), bord) = 1
	</select>
	
	<!-- 원 영역 반경 내 사업체 테마 정보 -->
	<select id="getThemeInfo" parameterType="hashmap" resultType="hashmap">
		SELECT 	SUM(CASE WHEN theme_cd IN (7001, 7002, 7003, 7004, 7005, 7006, 7007) THEN 1 ELSE 0 END) as theme_sum_01
		,			SUM(CASE WHEN theme_cd IN (6001, 6002, 6003, 6004) THEN 1 ELSE 0 END) as theme_sum_02
		,			SUM(CASE WHEN theme_cd IN (8006, 9002) THEN 1 ELSE 0 END) as theme_sum_03
		,			SUM(CASE WHEN theme_cd IN (8007, 9003) THEN 1 ELSE 0 END) as theme_sum_04
		,			(
						SELECT	metro + bus
						FROM	
								(
									SELECT	(
													SELECT COUNT(*)
													FROM
															(
																SELECT	distinct station_nm
																FROM 	SRV_PT_SUBWAY_INOUT_INFO
																<!-- 2016. 03. 21 j.h.Seok 수정 -->		
																WHERE	st_contains(ST_BUFFER(st_pointfromtext(#{area},0),#{round}),pt) = 1		 
															)
													
												)  as metro
									,			(		
													SELECT COUNT(*)
													FROM
														(
															SELECT	distinct busstop_nm
															FROM 	SRV_PT_BUSSTOP_INFO 
															WHERE	tot_reg_cd IN 
															<foreach  collection="tot_list" item="tot_reg_cd" open="(" separator="," close=")">
																#{tot_reg_cd}
															</foreach>
														)						
												) as bus		
									FROM DUAL
								)
					) as theme_sum_05
		,			SUM(CASE WHEN theme_cd IN (6003, 6004) THEN 1 ELSE 0 END) as theme_sum_06
		,			SUM(CASE WHEN theme_cd IN (9001) THEN 1 ELSE 0 END) as theme_sum_07
		,			SUM(CASE WHEN theme_cd IN (2003) THEN 1 ELSE 0 END) as theme_sum_08
		,			SUM(CASE WHEN theme_cd IN (9004) THEN 1 ELSE 0 END) as theme_sum_09
		,			SUM(CASE WHEN theme_cd IN (9005) THEN 1 ELSE 0 END) as theme_sum_10
		FROM 	SRV_DT_CORPCENSUS_9 corp, SRV_PT_BD bd
		WHERE 	bd.sufid = corp.sufid
		AND		corp.base_year = #{bnd_year}
		AND		bd.tot_reg_cd IN
		<foreach  collection="tot_list" item="tot_reg_cd" open="(" separator="," close=")">
			#{tot_reg_cd}
		</foreach>
	</select>
	
	<!-- 원 영역 반경 내 인구, 가구, 주택, 사업체 정보 -->
	<select id="getTotalInfo" parameterType="hashmap" resultType="hashmap">
		SELECT	NVL((
						SELECT	SUM(ppltn_cnt)
						FROM 	SRV_DT_POPSREG_${year}
						WHERE 	tot_reg_cd IN 
						<foreach  collection="tot_list" item="tot_reg_cd" open="(" separator="," close=")">
							#{tot_reg_cd}
						</foreach>
					), 0) as ppltn_cnt
		,			NVL((
						SELECT	SUM(family_cnt)
						FROM		SRV_DT_FAMILYREG_${year}
						WHERE 	tot_reg_cd IN 
						<foreach  collection="tot_list" item="tot_reg_cd" open="(" separator="," close=")">
							#{tot_reg_cd}
						</foreach>
					), 0) as family_cnt
		,			NVL((
						SELECT	SUM(resid_cnt)
						FROM		SRV_DT_HOUSEREG_${year}
						WHERE 	tot_reg_cd IN 
						<foreach  collection="tot_list" item="tot_reg_cd" open="(" separator="," close=")">
							#{tot_reg_cd}
						</foreach>
					), 0) as resid_cnt
		,			NVL((
						SELECT 	COUNT(*)
						FROM 	SRV_DT_CORPCENSUS_9 corp, SRV_PT_BD bd
						WHERE 	bd.sufid = corp.sufid
						AND		corp.base_year = #{bnd_year}
						AND		bd.tot_reg_cd IN
						<foreach  collection="tot_list" item="tot_reg_cd" open="(" separator="," close=")">
							#{tot_reg_cd}
						</foreach>
					), 0) as corp_cnt
		FROM		DUAL
	</select>
	
	<!-- 시군구 학교 평균 -->
	<select id="getSggSchoolAvg" parameterType="hashmap" resultType="hashmap">
		SELECT	ROUND(AVG(sch.stdnt_cnt)) as stdnt_cnt
		,			ROUND(AVG(sch.tcher_cnt)) as tcher_cnt
		,			sgg_nm
					<!-- 2017. 06. 27 j.h.Seok DB 표준화 작업 -->
		,			schoolsystem as elsm
		FROM		SRV_PT_SCHOOL_INFO sch, SRV_PG_SGGBORD sgg
		WHERE	sch.base_year = #{data_year}
		AND		sgg.base_year = #{bnd_year}
		AND		SUBSTR(sch.tot_reg_cd, 0, 5) = SUBSTR(#{tot_reg_cd}, 0, 5)
		AND		SUBSTR(sch.tot_reg_cd, 0, 2) = sgg.sido_cd
		AND		SUBSTR(sch.tot_reg_cd, 3, 3) = sgg.sgg_cd
		<!-- 2017. 06. 27 j.h.Seok DB 표준화 작업 -->
		AND		sch.schoolsystem = #{elsm}
		GROUP BY sgg.sgg_nm, sch.elsm
	</select>
	
	<!-- 시군구 학교별 평균 학생,교사 -->
	<select id="getSggSchoolGroupAvg" parameterType="hashmap" resultType="hashmap">
		SELECT	ROUND(SUM(sch.stdnt_cnt)/COUNT(*)) as stdnt_cnt
		,			ROUND(SUM(sch.tcher_cnt)/COUNT(*)) as tcher_cnt
		,			sgg_nm
					<!-- 2017. 06. 27 j.h.Seok DB 표준화 작업 -->
		,			schoolsystem as elsm
		FROM		SRV_PT_SCHOOL_INFO sch, SRV_PG_SGGBORD sgg
		WHERE	sch.base_year = #{data_year}
		AND		sgg.base_year = #{bnd_year}
		AND		SUBSTR(sch.tot_reg_cd, 0, 5) = SUBSTR(#{tot_reg_cd}, 0, 5)
		AND		SUBSTR(sch.tot_reg_cd, 0, 2) = sgg.sido_cd
		AND		SUBSTR(sch.tot_reg_cd, 3, 3) = sgg.sgg_cd
		GROUP BY sgg.sgg_nm, sch.elsm
	</select>
	
	<!-- 지하철 승하차 인원 (월평균) -->
	<select id="metroMonthPpln" parameterType="hashmap" resultType="hashmap">
		SELECT	SUBSTR(surv_dt, 5, 2) as surv_dt
					<!-- 2017. 06. 27 j.h.Seok DB 표준화 작업 -->
		,			TO_CHAR(round(avg(hour_1_psn_cnt + hour_2_psn_cnt + hour_3_psn_cnt + hour_4_psn_cnt + hour_5_psn_cnt + hour_6_psn_cnt 
								+ hour_7_psn_cnt + hour_8_psn_cnt + hour_9_psn_cnt + hour_10_psn_cnt + hour_11_psn_cnt + hour_12_psn_cnt 
								+ hour_13_psn_cnt + hour_14_psn_cnt + hour_15_psn_cnt + hour_16_psn_cnt + hour_17_psn_cnt + hour_18_psn_cnt 
								+ hour_19_psn_cnt + hour_20_psn_cnt + hour_21_psn_cnt + hour_22_psn_cnt + hour_23_psn_cnt + hour_24_psn_cnt), 0)) as hour_psn_avg
		FROM	SRV_PT_SUBWAY_INOUT_INFO
		<!-- 2017. 03. 22 오류 수정 -->
		WHERE	(subway_no = #{subway_no} or station_nm = #{station_nm})
		AND		SUBSTR(inout_type, 0, 1) = #{inout_type}
		GROUP BY SUBSTR(surv_dt, 5, 2)
	</select>
	
	<!-- 지하철 승하차 인원 (요일 평균) -->
	<select id="metroWeekPpln" parameterType="hashmap" resultType="hashmap">
		SELECT	CASE WHEN to_char(to_date(surv_dt), 'd') = 1 THEN '일요일'
							WHEN to_char(to_date(surv_dt), 'd') = 2 THEN '월요일'
							WHEN to_char(to_date(surv_dt), 'd') = 3 THEN '화요일'
							WHEN to_char(to_date(surv_dt), 'd') = 4 THEN '수요일'
							WHEN to_char(to_date(surv_dt), 'd') = 5 THEN '목요일'
							WHEN to_char(to_date(surv_dt), 'd') = 6 THEN '금요일'
							WHEN to_char(to_date(surv_dt), 'd') = 7 THEN '토요일'
							END as surv_dt
					<!-- 2017. 06. 27 j.h.Seok DB 표준화 작업 -->
		,			TO_CHAR(round(avg(hour_1_psn_cnt + hour_2_psn_cnt + hour_3_psn_cnt + hour_4_psn_cnt + hour_5_psn_cnt + hour_6_psn_cnt 
								+ hour_7_psn_cnt + hour_8_psn_cnt + hour_9_psn_cnt + hour_10_psn_cnt + hour_11_psn_cnt + hour_12_psn_cnt 
								+ hour_13_psn_cnt + hour_14_psn_cnt + hour_15_psn_cnt + hour_16_psn_cnt + hour_17_psn_cnt + hour_18_psn_cnt 
								+ hour_19_psn_cnt + hour_20_psn_cnt + hour_21_psn_cnt + hour_22_psn_cnt + hour_23_psn_cnt + hour_24_psn_cnt), 0)) as hour_psn_avg
		FROM	SRV_PT_SUBWAY_INOUT_INFO
		WHERE	subway_no = #{subway_no}
		AND		SUBSTR(inout_type, 0, 1) = #{inout_type}
		GROUP BY to_char(to_date(surv_dt), 'd')
	</select>
	
	<!-- 공공데이터 목록 -->
	<select id="publicDataList" parameterType="hashmap" resultType="hashmap">
		SELECT	pub_data_id
		,			pub_data_nm
		,			pub_data_year
		FROM		SRV_DT_PUB_DATA_MAIN
		<where>
			<if test='type == "interactiveMap"'>
				AND	intractvmap_apply_yn = 'Y'
			</if>
			<if test='type == "bizStatsMap"'>
				AND	bizstatmap_apply_yn = 'Y'
			</if>
		</where>
	</select>
	
	<!-- ==================== 2017.06.26 [개발팀] kcu 공공데이터 추가 START =================== -->
	<!-- 대전-세종간 교통흐름정보 - CCTV 목록 -->
	<select id="cctvPoiList" parameterType="hashmap" resultType="hashmap">
		SELECT 
	            	a.cctv_no
	        ,       a.cctv_lc_id
	        ,       a.lc_nm
	        ,       a.path_div
	        ,       a.path_nm
	        ,       a.addr
	        ,       round(st_x(a.pt)) as x_coord
	        ,       round(st_y(a.pt)) as y_coord
	        ,       round(b.recent_6_month_day_avg_pasng_cnt, 1) as recent_6_month_day_avg_pasng_cnt
	        ,       b.base_ym
		FROM  SRV_PT_TRNSFLWSVC_CCTV_INFO a
			, SRV_DT_TRNSFLWSVC_MONTHLY_CCTV_AVG_PASNG_CNT b
			,(
				SELECT 
						a.cctv_lc_id, 
						MAX(BASE_YM) as base_ym
				FROM    SRV_PT_TRNSFLWSVC_CCTV_INFO a
				INNER   JOIN SRV_DT_TRNSFLWSVC_MONTHLY_CCTV_AVG_PASNG_CNT b
 				ON 		a.cctv_lc_id = b.cctv_lc_id
				GROUP BY a.cctv_lc_id
			  ) c
		WHERE a.cctv_lc_id = b.cctv_lc_id
		AND a.cctv_lc_id = c.cctv_lc_id
		AND b.base_ym = c.base_ym
	</select>
	
	<!-- 대전-세종간 교통흐름정보 - BRT 목록 -->
	<select id="brtPoiList" parameterType="hashmap" resultType="hashmap">
		SELECT 
                	a.busstop_no
        	,       a.busstop_id
        	,       a.busstop_nm
	        ,       a.path_div
	        ,       a.path_nm
	        ,       round(st_x(a.pt)) as x_coord
	        ,       round(st_y(a.pt)) as y_coord
	        ,       round(b.recent_6_month_day_avg_tkcar_psn_cnt,1) as recent_6_month_day_avg_tkcar_psn_cnt
	        ,       round(b.recent_6_month_day_avg_gff_psn_cnt,1) as recent_6_month_day_avg_gff_psn_cnt
	        ,       b.base_ym
		FROM	SRV_PT_TRNSFLWSVC_BUSSTOP_INFO a
			  , SRV_DT_TRNSFLWSVC_MONTHLY_BRT_AVG_INOUT_PSN b
			  ,(
					SELECT 
							a.busstop_no, 
							MAX(BASE_YM) as base_ym
					FROM    SRV_PT_TRNSFLWSVC_BUSSTOP_INFO a
					INNER JOIN SRV_DT_TRNSFLWSVC_MONTHLY_BRT_AVG_INOUT_PSN b
 					ON a.busstop_no = b.busstop_no
					GROUP BY a.busstop_no
				) c
		WHERE a.busstop_no = b.busstop_no
		AND a.busstop_no = c.busstop_no
		AND b.base_ym = c.base_ym
	</select>
	
	<!-- 대전-세종간 교통흐름정보 - CCTV 월별 그래프 정보 -->
	<select id="cctvWeekendChartInfo" parameterType="hashmap" resultType="hashmap">
		SELECT 
        			base_ym
			,       cctv_lc_id
			,       round(mdwk_day_avg_pasng_cnt,1) as mdwk_day_avg_pasng_cnt
			,       round(weekend_day_avg_pasng_cnt,1) as weekend_day_avg_pasng_cnt
			,       round(day_avg_pasng_cnt,1) as day_avg_pasng_cnt
			,       round(attend_ts_time_pr_avg_pasng_cnt,1) as attend_ts_time_pr_avg_pasng_cnt
			,       round(lvffc_ts_time_pr_avg_pasng_cnt,1) as lvffc_ts_time_pr_avg_pasng_cnt
			,       round(time_pr_avg_pasng_cnt,1) as time_pr_avg_pasng_cnt
			,       opr_day_cnt
			,       pasng_cnt
		FROM  SRV_DT_TRNSFLWSVC_MONTHLY_CCTV_AVG_PASNG_CNT
		WHERE cctv_lc_id = #{cctv_lc_id}
	</select>
	
	<!-- 대전-세종간 교통흐름정보 - CCTV 시간대별 정보-->
	<select id="cctvTimeSeriesChartInfo" parameterType="hashmap" resultType="hashmap">
		SELECT
            		base_ym
        	,   	cctv_lc_id
        	,   	weekend_div
        	,   	round(hour_0_avg_pasng_cnt,1) as hour_0_avg_pasng_cnt
        	,  		round(hour_1_avg_pasng_cnt,1) as hour_1_avg_pasng_cnt
	        ,   	round(hour_2_avg_pasng_cnt,1) as hour_2_avg_pasng_cnt 
	        ,   	round(hour_3_avg_pasng_cnt,1) as hour_3_avg_pasng_cnt
	        ,   	round(hour_4_avg_pasng_cnt,1) as hour_4_avg_pasng_cnt  
	        ,   	round(hour_5_avg_pasng_cnt,1) as hour_5_avg_pasng_cnt
	        ,   	round(hour_6_avg_pasng_cnt,1) as hour_6_avg_pasng_cnt
	        ,   	round(hour_7_avg_pasng_cnt,1) as hour_7_avg_pasng_cnt
	        ,   	round(hour_8_avg_pasng_cnt,1) as hour_8_avg_pasng_cnt
	        ,   	round(hour_9_avg_pasng_cnt,1) as hour_9_avg_pasng_cnt
	        ,  	 	round(hour_10_avg_pasng_cnt,1) as hour_10_avg_pasng_cnt
	        ,   	round(hour_11_avg_pasng_cnt,1) as hour_11_avg_pasng_cnt
	        ,   	round(hour_12_avg_pasng_cnt,1) as hour_12_avg_pasng_cnt
	        ,   	round(hour_13_avg_pasng_cnt,1) as hour_13_avg_pasng_cnt
	        ,   	round(hour_14_avg_pasng_cnt,1) as hour_14_avg_pasng_cnt
	        ,   	round(hour_15_avg_pasng_cnt,1) as hour_15_avg_pasng_cnt
	        ,   	round(hour_16_avg_pasng_cnt,1) as hour_16_avg_pasng_cnt
	        ,   	round(hour_17_avg_pasng_cnt,1) as hour_17_avg_pasng_cnt
	        ,   	round(hour_18_avg_pasng_cnt,1) as hour_18_avg_pasng_cnt
	        ,   	round(hour_19_avg_pasng_cnt,1) as hour_19_avg_pasng_cnt
	        ,   	round(hour_20_avg_pasng_cnt,1) as hour_20_avg_pasng_cnt
	        ,   	round(hour_21_avg_pasng_cnt,1) as hour_21_avg_pasng_cnt
	        ,   	round(hour_22_avg_pasng_cnt,1) as hour_22_avg_pasng_cnt
	        ,   	round(hour_23_avg_pasng_cnt,1) as hour_23_avg_pasng_cnt
		FROM 	SRV_DT_TRNSFLWSVC_MONTHLY_TS_CCTV_AVG_PASNG_CNT
		WHERE 	base_ym = #{base_ym}
		AND   	cctv_lc_id = #{cctv_lc_id}
	</select>
	
	<!-- 대전-세종간 교통흐름정보 - CCTV 요일별 정보-->
	<select id="cctvDayOfWeekChartInfo" parameterType="hashmap" resultType="hashmap">
		SELECT
                	base_ym
       	 	,       cctv_lc_id
        	,       ts_div
        	,       round(sun_time_pr_avg_pasng_cnt,1) as sun_time_pr_avg_pasng_cnt
        	,       round(mon_time_pr_avg_pasng_cnt,1) as mon_time_pr_avg_pasng_cnt
        	,       round(tues_time_pr_avg_pasng_cnt,1) as tues_time_pr_avg_pasng_cnt
        	,       round(wed_time_pr_avg_pasng_cnt,1) as wed_time_pr_avg_pasng_cnt
        	,       round(thur_time_pr_avg_pasng_cnt,1) as thur_time_pr_avg_pasng_cnt
        	,       round(fri_time_pr_avg_pasng_cnt,1) as fri_time_pr_avg_pasng_cnt
        	,       round(sat_time_pr_avg_pasng_cnt,1) as sat_time_pr_avg_pasng_cnt
		FROM    SRV_DT_TRNSFLWSVC_MONTHLY_DAYOFWEEK_CCTV_AVG_PASNG_CNT
		WHERE 	base_ym = #{base_ym}
		AND   	cctv_lc_id = #{cctv_lc_id}
	</select>
	
	<!-- 대전-세종간 교통흐름정보 - BRT 월별 그래프 정보 -->
	<select id="brtWeekendChartInfo" parameterType="hashmap" resultType="hashmap">
		SELECT 
                    base_ym
            ,       busstop_no
            ,       round(mdwk_day_avg_tkcar_psn_cnt,1) as mdwk_day_avg_tkcar_psn_cnt
            ,       round(mdwk_day_avg_gff_psn_cnt,1) as mdwk_day_avg_gff_psn_cnt
            ,       round(weekend_day_avg_tkcar_psn_cnt,1) as weekend_day_avg_tkcar_psn_cnt
            ,       round(weekend_day_avg_gff_psn_cnt,1) as weekend_day_avg_gff_psn_cnt
            ,       round(day_avg_tkcar_psn_cnt,1) as day_avg_tkcar_psn_cnt
            ,       round(day_avg_gff_psn_cnt,1) as day_avg_gff_psn_cnt
            ,       round(attend_ts_time_pr_avg_tkcar_psn_cnt,1) as attend_ts_time_pr_avg_tkcar_psn_cnt
            ,       round(attend_ts_time_pr_avg_gff_psn_cnt,1) as attend_ts_time_pr_avg_gff_psn_cnt
            ,       round(lvffc_ts_time_pr_avg_tkcar_psn_cnt,1) as lvffc_ts_time_pr_avg_tkcar_psn_cnt
            ,       round(lvffc_ts_time_pr_avg_gff_psn_cnt,1) as lvffc_ts_time_pr_avg_gff_psn_cnt
            ,       round(time_pr_avg_tkcar_psn_cnt,1) as time_pr_avg_tkcar_psn_cnt
            ,       round(time_pr_avg_gff_psn_cnt,1) as time_pr_avg_gff_psn_cnt
            ,       tkcar_opr_day_cnt
            ,       gff_opr_day_cnt
            ,       tkcar_psn_cnt
            ,       gff_psn_cnt
        FROM  SRV_DT_TRNSFLWSVC_MONTHLY_BRT_AVG_INOUT_PSN
        WHERE busstop_no = #{busstop_no}
	</select>
	
	<!-- 대전-세종간 교통흐름정보 - BRT 시간대별 정보-->
	<select id="brtTimeSeriesChartInfo" parameterType="hashmap" resultType="hashmap">
		SELECT
                    base_ym
            ,       busstop_no
            ,       weekend_div
            ,       round(hour_6_avg_tkcar_psn_cnt,1) as hour_6_avg_tkcar_psn_cnt
            ,       round(hour_7_avg_tkcar_psn_cnt,1) as hour_7_avg_tkcar_psn_cnt
            ,       round(hour_8_avg_tkcar_psn_cnt,1) as hour_8_avg_tkcar_psn_cnt
            ,       round(hour_9_avg_tkcar_psn_cnt,1) as hour_9_avg_tkcar_psn_cnt
            ,       round(hour_10_avg_tkcar_psn_cnt,1) as hour_10_avg_tkcar_psn_cnt
            ,       round(hour_11_avg_tkcar_psn_cnt,1) as hour_11_avg_tkcar_psn_cnt
            ,       round(hour_12_avg_tkcar_psn_cnt,1) as hour_12_avg_tkcar_psn_cnt
            ,       round(hour_13_avg_tkcar_psn_cnt,1) as hour_13_avg_tkcar_psn_cnt
            ,       round(hour_14_avg_tkcar_psn_cnt,1) as hour_14_avg_tkcar_psn_cnt
            ,       round(hour_15_avg_tkcar_psn_cnt,1) as hour_15_avg_tkcar_psn_cnt
            ,       round(hour_16_avg_tkcar_psn_cnt,1) as hour_16_avg_tkcar_psn_cnt
            ,       round(hour_17_avg_tkcar_psn_cnt,1) as hour_17_avg_tkcar_psn_cnt
            ,       round(hour_18_avg_tkcar_psn_cnt,1) as hour_18_avg_tkcar_psn_cnt
            ,       round(hour_19_avg_tkcar_psn_cnt,1) as hour_19_avg_tkcar_psn_cnt
            ,       round(hour_20_avg_tkcar_psn_cnt,1) as hour_20_avg_tkcar_psn_cnt
            ,       round(hour_21_avg_tkcar_psn_cnt,1) as hour_21_avg_tkcar_psn_cnt
            ,       round(hour_22_avg_tkcar_psn_cnt,1) as hour_22_avg_tkcar_psn_cnt
            ,       round(hour_23_avg_tkcar_psn_cnt,1) as hour_23_avg_tkcar_psn_cnt
            ,       round(hour_6_avg_gff_psn_cnt,1) as hour_6_avg_gff_psn_cnt
            ,       round(hour_7_avg_gff_psn_cnt,1) as hour_7_avg_gff_psn_cnt
            ,       round(hour_8_avg_gff_psn_cnt,1) as hour_8_avg_gff_psn_cnt
            ,       round(hour_9_avg_gff_psn_cnt,1) as hour_9_avg_gff_psn_cnt
            ,       round(hour_10_avg_gff_psn_cnt,1) as hour_10_avg_gff_psn_cnt
            ,       round(hour_11_avg_gff_psn_cnt,1) as hour_11_avg_gff_psn_cnt
            ,       round(hour_12_avg_gff_psn_cnt,1) as hour_12_avg_gff_psn_cnt
            ,       round(hour_13_avg_gff_psn_cnt,1) as hour_13_avg_gff_psn_cnt
            ,       round(hour_14_avg_gff_psn_cnt,1) as hour_14_avg_gff_psn_cnt
            ,       round(hour_15_avg_gff_psn_cnt,1) as hour_15_avg_gff_psn_cnt
            ,       round(hour_16_avg_gff_psn_cnt,1) as hour_16_avg_gff_psn_cnt
            ,       round(hour_17_avg_gff_psn_cnt,1) as hour_17_avg_gff_psn_cnt
            ,       round(hour_18_avg_gff_psn_cnt,1) as hour_18_avg_gff_psn_cnt
            ,       round(hour_19_avg_gff_psn_cnt,1) as hour_19_avg_gff_psn_cnt
            ,       round(hour_20_avg_gff_psn_cnt,1) as hour_20_avg_gff_psn_cnt
            ,       round(hour_21_avg_gff_psn_cnt,1) as hour_21_avg_gff_psn_cnt
            ,       round(hour_22_avg_gff_psn_cnt,1) as hour_22_avg_gff_psn_cnt
            ,       round(hour_23_avg_gff_psn_cnt,1) as hour_23_avg_gff_psn_cnt
        FROM    SRV_DT_TRNSFLWSVC_MONTHLY_TS_BRT_AVG_INOUT_PSN
        WHERE   base_ym = #{base_ym}
        AND     busstop_no = #{busstop_no}
	</select>
	
	<!-- 대전-세종간 교통흐름정보 - BRT 요일별 정보-->
	<select id="brtDayOfWeekChartInfo" parameterType="hashmap" resultType="hashmap">
		SELECT
                    base_ym
            ,       busstop_no
            ,       ts_div
            ,       round(mon_time_pr_avg_tkcar_psn_cnt,1) as mon_time_pr_avg_tkcar_psn_cnt
            ,       round(tues_time_pr_avg_tkcar_psn_cnt,1) as tues_time_pr_avg_tkcar_psn_cnt
            ,       round(wed_time_pr_avg_tkcar_psn_cnt,1) as wed_time_pr_avg_tkcar_psn_cnt
            ,       round(thur_time_pr_avg_tkcar_psn_cnt,1) as thur_time_pr_avg_tkcar_psn_cnt
            ,       round(fri_time_pr_avg_tkcar_psn_cnt,1) as fri_time_pr_avg_tkcar_psn_cnt
            ,       round(sat_time_pr_avg_tkcar_psn_cnt,1) as sat_time_pr_avg_tkcar_psn_cnt
            ,       round(sun_time_pr_avg_tkcar_psn_cnt,1) as sun_time_pr_avg_tkcar_psn_cnt
            ,       round(mon_time_pr_avg_gff_psn_cnt,1) as mon_time_pr_avg_gff_psn_cnt
            ,       round(tues_time_pr_avg_gff_psn_cnt,1) as tues_time_pr_avg_gff_psn_cnt
            ,       round(wed_time_pr_avg_gff_psn_cnt,1) as wed_time_pr_avg_gff_psn_cnt
            ,       round(thur_time_pr_avg_gff_psn_cnt,1) as thur_time_pr_avg_gff_psn_cnt
            ,       round(fri_time_pr_avg_gff_psn_cnt,1) as fri_time_pr_avg_gff_psn_cnt
            ,       round(sat_time_pr_avg_gff_psn_cnt,1) as sat_time_pr_avg_gff_psn_cnt
            ,       round(sun_time_pr_avg_gff_psn_cnt,1) as sun_time_pr_avg_gff_psn_cnt
        FROM    SRV_DT_TRNSFLWSVC_MONTHLY_DAYOFWEEK_BRT_AVG_INOUT_PSN
        WHERE   base_ym = #{base_ym}
        AND     busstop_no = #{busstop_no}
	</select>
	
	<!-- 대전-세종간 교통흐름정보 - CCTV base year 정보-->
	<select id="cctvBaseYearList" parameterType="hashmap" resultType="hashmap">
		SELECT 
				distinct base_ym 
		FROM 	SRV_DT_TRNSFLWSVC_MONTHLY_CCTV_AVG_PASNG_CNT 
		ORDER BY base_ym DESC
	</select>
	
	<!-- 대전-세종간 교통흐름정보 - BRT base year 정보-->
	<select id="brtBaseYearList" parameterType="hashmap" resultType="hashmap">
		SELECT 
				distinct base_ym 
		FROM 	SRV_DT_TRNSFLWSVC_MONTHLY_BRT_AVG_INOUT_PSN 
		ORDER BY base_ym DESC
	</select>
	<!-- ==================== 2017.06.26 [개발팀] kcu 공공데이터 추가 END =================== -->
</mapper>