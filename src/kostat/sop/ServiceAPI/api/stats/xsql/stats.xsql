<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="stats">

	<select id="admnm" parameterType="hashmap" resultType="hashmap">
		SELECT SIDO_NM
		<if test='adm_length >= "5" '>
		     , SGG_NM 
		</if>
		<if test='adm_length == "7" '>
		 	 , EMDONG_NM
		</if>
		FROM SRV_PG_ADMBORD  
		 WHERE 1=1
		   AND BASE_YEAR = #{bnd_year}
		   AND SIDO_CD = #{sido_cd}
			<if test='adm_length >= "5" '>
		   		AND SGG_CD = #{sgg_cd}
			</if>
			<if test='adm_length == "7" '>
		   		AND EMDONG_CD = #{emdong_cd}
			</if>
		 GROUP BY SIDO_NM
			<if test='adm_length >= "5" '>
		 	    , SGG_NM 
			</if>
			<if test='adm_length == "7" '>
		 	    , EMDONG_NM
			</if>
		 LIMIT 1
	</select>
	

<!-- 인구총괄 -->
	<select id="population" parameterType="hashmap" resultType="hashmap">
		select nvl(sum(tot_ppltn_hhh_cnt),0) tot_ppltn_hhh_cnt 
             , nvl(sum(tot_ppltn_hh_cnt), 0) tot_ppltn_hh_cnt
             , nvl(sum(tot_ppltn_h_cnt), 0) tot_ppltn_h_cnt
             , nvl(sum(tot_ppltn_base_cnt), 0) tot_ppltn_base_cnt
             , nvl(sum(tot_ppltn_male_hhh_cnt),0) tot_ppltn_male_hhh_cnt 
             , nvl(sum(tot_ppltn_male_hh_cnt), 0) tot_ppltn_male_hh_cnt
             , nvl(sum(tot_ppltn_male_h_cnt), 0) tot_ppltn_male_h_cnt
             , nvl(sum(tot_ppltn_male_base_cnt), 0) tot_ppltn_male_base_cnt
             , nvl(sum(tot_ppltn_fem_hhh_cnt),0) tot_ppltn_fem_hhh_cnt 
             , nvl(sum(tot_ppltn_fem_hh_cnt), 0) tot_ppltn_fem_hh_cnt
             , nvl(sum(tot_ppltn_fem_h_cnt), 0) tot_ppltn_fem_h_cnt
             , nvl(sum(tot_ppltn_fem_base_cnt), 0) tot_ppltn_fem_base_cnt
             , nvl(round(avg(avg_age_hhh_cnt)), 0) avg_age_hhh_cnt
             , nvl(round(avg(avg_age_hh_cnt)), 0)  avg_age_hh_cnt
             , nvl(round(avg(avg_age_h_cnt)), 0) avg_age_h_cnt
             , nvl(round(avg(avg_age_base_cnt)), 0) avg_age_base_cnt
             , nvl(round(avg(avg_age_male_hhh_cnt)), 0) avg_age_male_hhh_cnt
             , nvl(round(avg(avg_age_male_hh_cnt)), 0)  avg_age_male_hh_cnt
             , nvl(round(avg(avg_age_male_h_cnt)), 0) avg_age_male_h_cnt
             , nvl(round(avg(avg_age_male_base_cnt)), 0) avg_age_male_base_cnt
             , nvl(round(avg(avg_age_fem_hhh_cnt)), 0) avg_age_fem_hhh_cnt
             , nvl(round(avg(avg_age_fem_hh_cnt)), 0)  avg_age_fem_hh_cnt
             , nvl(round(avg(avg_age_fem_h_cnt)), 0) avg_age_fem_h_cnt
             , nvl(round(avg(avg_age_fem_base_cnt)), 0) avg_age_fem_base_cnt
             , nvl(round(avg(ppltn_dnsty_hhh_cnt)), 0) ppltn_dnsty_hhh_cnt
             , nvl(round(avg(ppltn_dnsty_hh_cnt)), 0)  ppltn_dnsty_hh_cnt
             , nvl(round(avg(ppltn_dnsty_h_cnt)), 0) ppltn_dnsty_h_cnt
             , nvl(round(avg(ppltn_dnsty_base_cnt)), 0) ppltn_dnsty_base_cnt
             , nvl(round(avg(aged_child_idx_hhh_cnt)), 0) aged_child_idx_hhh_cnt
             , nvl(round(avg(aged_child_idx_hh_cnt)), 0)  aged_child_idx_hh_cnt
             , nvl(round(avg(aged_child_idx_h_cnt)), 0) aged_child_idx_h_cnt
             , nvl(round(avg(aged_child_idx_base_cnt)), 0) aged_child_idx_base_cnt
             , nvl(round(avg(oldage_suprt_per_hhh_cnt)), 0) oldage_suprt_per_hhh_cnt
             , nvl(round(avg(oldage_suprt_per_hh_cnt)), 0)  oldage_suprt_per_hh_cnt
             , nvl(round(avg(oldage_suprt_per_h_cnt)), 0) oldage_suprt_per_h_cnt
             , nvl(round(avg(oldage_suprt_per_base_cnt)), 0) oldage_suprt_per_base_cnt
             , nvl(round(avg(juv_suprt_per_hhh_cnt)), 0) juv_suprt_per_hhh_cnt
             , nvl(round(avg(juv_suprt_per_hh_cnt)), 0)  juv_suprt_per_hh_cnt
             , nvl(round(avg(juv_suprt_per_h_cnt)), 0) juv_suprt_per_h_cnt
             , nvl(round(avg(juv_suprt_per_base_cnt)), 0) juv_suprt_per_base_cnt
             , nvl(round(avg(tot_suprt_per_hhh_cnt)), 0) tot_suprt_per_hhh_cnt
             , nvl(round(avg(tot_suprt_per_hh_cnt)), 0)  tot_suprt_per_hh_cnt
             , nvl(round(avg(tot_suprt_per_h_cnt)), 0) tot_suprt_per_h_cnt
             , nvl(round(avg(tot_suprt_per_base_cnt)), 0) tot_suprt_per_base_cnt
		  from (select nvl(sum(tot_ppltn),0) tot_ppltn_hhh_cnt 
		             , (case when substr(bord.adm_cd, 1, 2) = ''||#{sido_cd}||'' then sum(tot_ppltn) end) as tot_ppltn_hh_cnt
		             , (case when substr(bord.adm_cd, 1, 5) = ''||#{sido_cd}||''||''||#{sgg_cd}||'' then sum(tot_ppltn) end) as tot_ppltn_h_cnt
		             , (case when substr(bord.adm_cd, 1, 7) = ''||#{sido_cd}||''||''||#{sgg_cd}||''||''||#{emdong_cd}||'' then sum(tot_ppltn) end) as tot_ppltn_base_cnt
		             , nvl(sum(tot_ppltn_male),0) tot_ppltn_male_hhh_cnt 
		             , (case when substr(bord.adm_cd, 1, 2) = ''||#{sido_cd}||'' then sum(tot_ppltn_male) end) as tot_ppltn_male_hh_cnt
		             , (case when substr(bord.adm_cd, 1, 5) = ''||#{sido_cd}||''||''||#{sgg_cd}||'' then sum(tot_ppltn_male) end) as tot_ppltn_male_h_cnt
		             , (case when substr(bord.adm_cd, 1, 7) = ''||#{sido_cd}||''||''||#{sgg_cd}||''||''||#{emdong_cd}||'' then sum(tot_ppltn_male) end) as tot_ppltn_male_base_cnt
		             , nvl(sum(tot_ppltn_fem),0) tot_ppltn_fem_hhh_cnt 
		             , (case when substr(bord.adm_cd, 1, 2) = ''||#{sido_cd}||'' then sum(tot_ppltn_fem) end) as tot_ppltn_fem_hh_cnt
		             , (case when substr(bord.adm_cd, 1, 5) = ''||#{sido_cd}||''||''||#{sgg_cd}||'' then sum(tot_ppltn_fem) end) as tot_ppltn_fem_h_cnt
		             , (case when substr(bord.adm_cd, 1, 7) = ''||#{sido_cd}||''||''||#{sgg_cd}||''||''||#{emdong_cd}||'' then sum(tot_ppltn_fem) end) as tot_ppltn_fem_base_cnt
		             , round(avg(nvl(pplsum.avg_age,0))) avg_age_hhh_cnt
		             , (case when substr(bord.adm_cd, 1, 2) = ''||#{sido_cd}||'' then avg(nvl(pplsum.avg_age,0)) end) as avg_age_hh_cnt
		             , (case when substr(bord.adm_cd, 1, 5) = ''||#{sido_cd}||''||''||#{sgg_cd}||'' then avg(nvl(pplsum.avg_age,0)) end) as avg_age_h_cnt
		             , (case when substr(bord.adm_cd, 1, 7) = ''||#{sido_cd}||''||''||#{sgg_cd}||''||''||#{emdong_cd}||'' then avg(nvl(pplsum.avg_age,0)) end) as avg_age_base_cnt
		             , round(avg(nvl(pplsum.avg_age_male,0))) avg_age_male_hhh_cnt
		             , (case when substr(bord.adm_cd, 1, 2) = ''||#{sido_cd}||'' then avg(nvl(pplsum.avg_age_male,0)) end) as avg_age_male_hh_cnt
		             , (case when substr(bord.adm_cd, 1, 5) = ''||#{sido_cd}||''||''||#{sgg_cd}||'' then avg(nvl(pplsum.avg_age_male,0)) end) as avg_age_male_h_cnt
		             , (case when substr(bord.adm_cd, 1, 7) = ''||#{sido_cd}||''||''||#{sgg_cd}||''||''||#{emdong_cd}||'' then avg(nvl(pplsum.avg_age_male,0)) end) as avg_age_male_base_cnt
		             , round(avg(nvl(pplsum.avg_age_fem,0))) avg_age_fem_hhh_cnt
		             , (case when substr(bord.adm_cd, 1, 2) = ''||#{sido_cd}||'' then avg(nvl(pplsum.avg_age_fem,0)) end) as avg_age_fem_hh_cnt
		             , (case when substr(bord.adm_cd, 1, 5) = ''||#{sido_cd}||''||''||#{sgg_cd}||'' then avg(nvl(pplsum.avg_age_fem,0)) end) as avg_age_fem_h_cnt
		             , (case when substr(bord.adm_cd, 1, 7) = ''||#{sido_cd}||''||''||#{sgg_cd}||''||''||#{emdong_cd}||'' then avg(nvl(pplsum.avg_age_fem,0)) end) as avg_age_fem_base_cnt
		             , round(avg(nvl(pplsum.ppltn_dnsty,0))) ppltn_dnsty_hhh_cnt
		             , (case when substr(bord.adm_cd, 1, 2) = ''||#{sido_cd}||'' then avg(nvl(pplsum.ppltn_dnsty,0)) end) as ppltn_dnsty_hh_cnt
		             , (case when substr(bord.adm_cd, 1, 5) = ''||#{sido_cd}||''||''||#{sgg_cd}||'' then avg(nvl(pplsum.ppltn_dnsty,0)) end) as ppltn_dnsty_h_cnt
		             , (case when substr(bord.adm_cd, 1, 7) = ''||#{sido_cd}||''||''||#{sgg_cd}||''||''||#{emdong_cd}||'' then avg(nvl(pplsum.ppltn_dnsty,0)) end) as ppltn_dnsty_base_cnt
		             , round(avg(nvl(pplsum.aged_child_idx,0))) aged_child_idx_hhh_cnt
		             , (case when substr(bord.adm_cd, 1, 2) = ''||#{sido_cd}||'' then avg(nvl(pplsum.aged_child_idx,0)) end) as aged_child_idx_hh_cnt
		             , (case when substr(bord.adm_cd, 1, 5) = ''||#{sido_cd}||''||''||#{sgg_cd}||'' then avg(nvl(pplsum.aged_child_idx,0)) end) as aged_child_idx_h_cnt
		             , (case when substr(bord.adm_cd, 1, 7) = ''||#{sido_cd}||''||''||#{sgg_cd}||''||''||#{emdong_cd}||'' then avg(nvl(pplsum.aged_child_idx,0)) end) as aged_child_idx_base_cnt
		             , round(avg(nvl(pplsum.oldage_suprt_per,0))) oldage_suprt_per_hhh_cnt
		             , (case when substr(bord.adm_cd, 1, 2) = ''||#{sido_cd}||'' then avg(nvl(pplsum.oldage_suprt_per,0)) end) as oldage_suprt_per_hh_cnt
		             , (case when substr(bord.adm_cd, 1, 5) = ''||#{sido_cd}||''||''||#{sgg_cd}||'' then avg(nvl(pplsum.oldage_suprt_per,0)) end) as oldage_suprt_per_h_cnt
		             , (case when substr(bord.adm_cd, 1, 7) = ''||#{sido_cd}||''||''||#{sgg_cd}||''||''||#{emdong_cd}||'' then avg(nvl(pplsum.oldage_suprt_per,0)) end) as oldage_suprt_per_base_cnt
		             , round(avg(nvl(pplsum.juv_suprt_per,0))) juv_suprt_per_hhh_cnt
		             , (case when substr(bord.adm_cd, 1, 2) = ''||#{sido_cd}||'' then avg(nvl(pplsum.juv_suprt_per,0)) end) as juv_suprt_per_hh_cnt
		             , (case when substr(bord.adm_cd, 1, 5) = ''||#{sido_cd}||''||''||#{sgg_cd}||'' then avg(nvl(pplsum.juv_suprt_per,0)) end) as juv_suprt_per_h_cnt
		             , (case when substr(bord.adm_cd, 1, 7) = ''||#{sido_cd}||''||''||#{sgg_cd}||''||''||#{emdong_cd}||'' then avg(nvl(pplsum.juv_suprt_per,0)) end) as juv_suprt_per_base_cnt
		             , round(avg(nvl(pplsum.tot_suprt_per,0))) tot_suprt_per_hhh_cnt
		             , (case when substr(bord.adm_cd, 1, 2) = ''||#{sido_cd}||'' then avg(nvl(pplsum.tot_suprt_per,0)) end) as tot_suprt_per_hh_cnt
		             , (case when substr(bord.adm_cd, 1, 5) = ''||#{sido_cd}||''||''||#{sgg_cd}||'' then avg(nvl(pplsum.tot_suprt_per,0)) end) as tot_suprt_per_h_cnt
		             , (case when substr(bord.adm_cd, 1, 7) = ''||#{sido_cd}||''||''||#{sgg_cd}||''||''||#{emdong_cd}||'' then avg(nvl(pplsum.tot_suprt_per,0)) end) as tot_suprt_per_base_cnt
		  from  srv_dt_ppltnsum_${year}  pplsum
		             , (select tot_reg_cd 
		                     , a.sido_cd||a.sgg_cd||a.emdong_cd adm_cd 
		                     , b.emdong_nm adm_nm 
		                     , a.base_year as year
		                  from srv_pg_totregbord a,  srv_pg_admbord b
		                  where  a.base_year = #{bnd_year}
			                 and a.base_year=b.base_year 
							 and a.sido_cd=b.sido_cd
							 and a.sgg_cd=b.sgg_cd
							 and a.emdong_cd=b.emdong_cd
		                )bord 
		         where pplsum.tot_reg_cd = bord.tot_reg_cd 
		         group by  bord.adm_cd ,bord.adm_nm 
		        )
	</select>
	
	
	<!-- 세부인구 정보 조회 -->
	<select id="searchpopulation" parameterType="hashmap" resultType="hashmap">
		select hhh_cnt
		    , hh_cnt
		    , h_cnt
		    <if test='adm_cd.length() == 7 '>
		    , base_cnt
		    </if>
		    <if test='adm_cd.length() != 7 '>
		    , 0 as base_cnt
		    </if>
		from 
		   (
		    select nvl(sum(hhh_cnt), 0) hhh_cnt
		         , nvl(sum(hh_cnt), 0) hh_cnt
		         , nvl(sum(h_cnt), 0) h_cnt
		    from
		        (
		        select nvl(sum(ppltn_cnt),0) hhh_cnt 
		            , nvl((case when substr(ppl.sido_cd||ppl.sgg_cd,1,2) = to_char(#{sido_cd}) then sum(ppltn_cnt) end),0) as hh_cnt
		            , nvl((case when ppl.sido_cd||ppl.sgg_cd = to_char(#{sido_cd})||to_char(#{sgg_cd}) then sum(ppltn_cnt) end),0) as h_cnt
		        from srv_dt_popsgg_${year} ppl
		        where  
		        	ppl.bord_base_year = #{bnd_year}
	        	<if test='gender != "0" '>
					and ppl.gender=#{gender}
			    </if>
			    <if test='age_from != null '>
					and ppl.age <![CDATA[>=]]> #{age_from}
					and ppl.age <![CDATA[<=]]> #{age_to}
			    </if>
			    <if test='edu_level != null '>
					and ppl.rd_edu_level in
					<foreach collection="edu_level" item="edu" open = "(" separator = "," close = ")">
						#{edu}
					</foreach>
				</if>
			    <if test='mrg_state != null '>
					and ppl.rd_mrg_state in
					<foreach  collection="mrg_state" item="mrg" open="(" separator="," close=")">
					  	#{mrg}
					</foreach>
				</if>
		            group by ppl.sido_cd,ppl.sgg_cd
		        )
		    ) sgg
		    <if test='adm_cd.length() == 7 '>
		 ,(
		        select nvl(sum(ppltn_cnt), 0) base_cnt 
		        from srv_dt_popsreg_${year} ppl
		        , srv_pg_totregbord bord
		         <where>
		         	bord.base_year = #{bnd_year}
		        and bord.sido_cd = #{sido_cd}
		        and bord.sgg_cd = #{sgg_cd}
		        and bord.emdong_cd = #{emdong_cd}
	        	<if test='gender != "0" '>
					and ppl.gender=#{gender}
			    </if>
			    <if test='age_from != null '>
					and ppl.age <![CDATA[>=]]> #{age_from}
					and ppl.age <![CDATA[<=]]> #{age_to}
			    </if>
			    <if test='edu_level != null '>
					and ppl.rd_edu_level in
					<foreach collection="edu_level" item="edu" open = "(" separator = "," close = ")">
						#{edu}
					</foreach>
				</if>
			    <if test='mrg_state != null '>
					and ppl.rd_mrg_state in
					<foreach  collection="mrg_state" item="mrg" open="(" separator="," close=")">
					  	#{mrg}
					</foreach>
				</if>
		        and ppl.tot_reg_cd = bord.tot_reg_cd 
		        </where>
		        group by sido_cd
		    ) emdong
		</if>
	</select>
	
	
	<!-- 가구 통계 -->
	<select id="household" parameterType="hashmap" resultType="hashmap">
		
		select hhh_cnt
		    , hh_cnt
		    , h_cnt
		    <if test='adm_cd.length() == 7 '>
		    , base_cnt
		    </if>
		    <if test='adm_cd.length() != 7 '>
		    , 0 as base_cnt
		    </if>
		from 
		   (
		    select nvl(sum(hhh_cnt), 0) hhh_cnt
		         , nvl(sum(hh_cnt), 0) hh_cnt
		         , nvl(sum(h_cnt), 0) h_cnt
		    from
		        (
		        select nvl(sum(family_cnt),0) hhh_cnt 
		            , nvl((case when substr(family.sido_cd||family.sgg_cd,1,2) = to_char(#{sido_cd}) then sum(family_cnt) end),0) as hh_cnt
		            , nvl((case when family.sido_cd||family.sgg_cd = to_char(#{sido_cd})||to_char(#{sgg_cd}) then sum(family_cnt) end),0) as h_cnt
		        from srv_dt_familysgg_${year} family
		        where  
		        	family.bord_base_year = #{bnd_year}
					<if test='household_type != null '>
							and family.rd_household_type in
					  	<foreach collection="household_type" item="household" open="(" separator="," close=")">
					 	 	#{household}
					  	</foreach>
					  </if>
					<if test='ocptn_type != null '>
						   and family.rd_ocptn_type in
						<foreach collection="ocptn_type" item="ocptn" open="(" separator="," close=")">
						  	#{ocptn}
						</foreach>
					</if>
		            group by family.sido_cd,family.sgg_cd
		        )
		    ) sgg
		    <if test='adm_cd.length() == 7 '>
		 ,(
		        select nvl(sum(family.family_cnt), 0) base_cnt 
		        from srv_dt_familyreg_${year} family
		        , srv_pg_totregbord bord
		         <where>
		         	bord.base_year = #{bnd_year}
		        and bord.sido_cd = #{sido_cd}
		        and bord.sgg_cd = #{sgg_cd}
		        and bord.emdong_cd = #{emdong_cd}
	        	<if test='household_type != null '>
						and family.rd_household_type in
				  	<foreach collection="household_type" item="household" open="(" separator="," close=")">
				 	 	#{household}
				  	</foreach>
			    </if>
				<if test='ocptn_type != null '>
					   and family.rd_ocptn_type in
					<foreach collection="ocptn_type" item="ocptn" open="(" separator="," close=")">
					  	#{ocptn}
					</foreach>
				</if>
		        and family.tot_reg_cd = bord.tot_reg_cd 
		        </where>
		        group by sido_cd
		    ) emdong
		</if>
		
	</select>
	 
	 
	<select id="house" parameterType="hashmap" resultType="hashmap">
		select hhh_cnt
		    , hh_cnt
		    , h_cnt
		    <if test='adm_cd.length() == 7 '>
		    , base_cnt
		    </if>
		    <if test='adm_cd.length() != 7 '>
		    , 0 as base_cnt
		    </if>
		from 
		   (
		    select nvl(sum(hhh_cnt), 0) hhh_cnt
		         , nvl(sum(hh_cnt), 0) hh_cnt
		         , nvl(sum(h_cnt), 0) h_cnt
		    from
		        (
		        select nvl(sum(house.resid_cnt),0) hhh_cnt 
		            , nvl((case when substr(house.sido_cd||house.sgg_cd,1,2) = to_char(#{sido_cd}) then sum(house.resid_cnt) end),0) as hh_cnt
		            , nvl((case when house.sido_cd||house.sgg_cd = to_char(#{sido_cd})||to_char(#{sgg_cd}) then sum(house.resid_cnt) end),0) as h_cnt
		        from srv_dt_housesgg_${year} house
		        where  
		        	house.bord_base_year = #{bnd_year}
		        <if test='house_type != null '>
					and house.rd_resid_1_type in
					<foreach  collection="house_type" item="type" open="(" separator="," close=")">
					  	#{type}
					</foreach>
			   </if>
				<if test='house_area_param != null '>
			      and ${house_area_param}
			   </if> 
			   <if test='const_year != null '>
				  and house.rd_const_year = #{const_year}
			   </if>
			   <if test='bdspace_from != null '>
				  and house.rd_bdspace_mm <![CDATA[>=]]> #{bdspace_from}
				  and house.rd_bdspace_mm <![CDATA[<=]]> #{bdspace_to}
			   </if>
			   <if test='search_type != null '>
				   and house.house_yn = #{search_type}
			   </if>
		            group by house.sido_cd,house.sgg_cd
		        )
		    ) sgg
		    <if test='adm_cd.length() == 7 '>
		 ,(
		        select nvl(sum(house.resid_cnt), 0) base_cnt 
		        from srv_dt_housereg_${year} house
		        , srv_pg_totregbord bord
		         <where>
		         	bord.base_year = #{bnd_year}
		        and bord.sido_cd = #{sido_cd}
		        and bord.sgg_cd = #{sgg_cd}
		        and bord.emdong_cd = #{emdong_cd}
	        	<if test='house_type != null '>
					and house.rd_resid_1_type in
					<foreach  collection="house_type" item="type" open="(" separator="," close=")">
					  	#{type}
					</foreach>
			   </if>
			   <if test='house_area_param != null '>
			      and ${house_area_param}
			   </if>
			   <if test='const_year != null '>
				  and house.rd_const_year = #{const_year}
			   </if>
			   <if test='bdspace_from != null '>
				  and house.rd_bdspace_mm <![CDATA[>=]]> #{bdspace_from}
				  and house.rd_bdspace_mm <![CDATA[<=]]> #{bdspace_to}
			   </if>
			   <if test='search_type != null '>
				   and house.house_yn = #{search_type}
			   </if>
		        and house.tot_reg_cd = bord.tot_reg_cd 
		        </where>
		        group by sido_cd
		    ) emdong
		</if>
	</select>
	
	
	<!-- 9월 서비스 -->
	<select id="house_2015" parameterType="hashmap" resultType="hashmap">
		select hhh_cnt
		    , hh_cnt
		    , h_cnt
		    <if test='adm_cd.length() == 7 '>
		    , base_cnt
		    </if>
		    <if test='adm_cd.length() != 7 '>
		    , 0 as base_cnt
		    </if>
		from 
		   (
		    select nvl(sum(hhh_cnt), 0) hhh_cnt
		         , nvl(sum(hh_cnt), 0) hh_cnt
		         , nvl(sum(h_cnt), 0) h_cnt
		    from
		        (
		        select nvl(sum(house.resid_cnt),0) hhh_cnt 
		            , nvl((case when substr(house.sido_cd||house.sgg_cd,1,2) = to_char(#{sido_cd}) then sum(house.resid_cnt) end),0) as hh_cnt
		            , nvl((case when house.sido_cd||house.sgg_cd = to_char(#{sido_cd})||to_char(#{sgg_cd}) then sum(house.resid_cnt) end),0) as h_cnt
		        from srv_dt_housesgg_${year} house
		        where  
		        	house.bord_base_year = #{bnd_year}
				<if test='house_type != null '>
					and house.rd_resid_1_type in
					<foreach  collection="house_type" item="type" open="(" separator="," close=")">
					  	#{type}
					</foreach>
			   </if>
			   <if test='house_area_cd != null '>
					and house.house_area_cd in
					<foreach  collection="house_area_cd" item="house_area_type" open="(" separator="," close=")">
						#{house_area_type}
					</foreach>
				</if>
				<!-- 2016.10.25 수정 -->
			  <if test='house_use_prid_cd != null '>
					and house_use_prid_cd = #{house_use_prid_cd}
			  </if>
			   <if test='search_type != null '>
				   and house.house_yn = #{search_type}
			   </if>
		            group by house.sido_cd,house.sgg_cd
		        )
		    ) sgg
		    <if test='adm_cd.length() == 7 '>
		 ,(
		        select nvl(sum(house.resid_cnt), 0) base_cnt 
		        from srv_dt_housereg_${year} house
		        , srv_pg_totregbord bord
		         <where>
		         	bord.base_year = #{bnd_year}
		        and bord.sido_cd = #{sido_cd}
		        and bord.sgg_cd = #{sgg_cd}
		        and bord.emdong_cd = #{emdong_cd}
	        	<if test='house_type != null '>
					and house.rd_resid_1_type in
					<foreach  collection="house_type" item="type" open="(" separator="," close=")">
					  	#{type}
					</foreach>
			   </if>
			   <if test='house_area_cd != null '>
					and house.house_area_cd in
					<foreach  collection="house_area_cd" item="house_area_type" open="(" separator="," close=")">
						#{house_area_type}
					</foreach>
				</if>
				<!-- 2016.10.25 수정 -->
			   <if test='house_use_prid_cd != null '>
			   		and house_use_prid_cd = #{house_use_prid_cd}
			   </if>
			   <if test='search_type != null '>
				   and house.house_yn = #{search_type}
			   </if>
		        and house.tot_reg_cd = bord.tot_reg_cd 
		        </where>
		        group by sido_cd
		    ) emdong
		</if>
	</select>
	
	
	<select id="fisheryhousehold" parameterType="hashmap" resultType="hashmap">
				select nvl(sum(hhh_cnt), 0) hhh_cnt
		     , nvl(sum(hh_cnt), 0) hh_cnt
		     , nvl(sum(h_cnt), 0) h_cnt
		     , nvl(sum(base_cnt), 0) base_cnt
		  from (select nvl(sum(fmember_cnt_num),0) hhh_cnt 
		             , (case when substr(bord.adm_cd, 1, 2) = ''||#{sido_cd}||'' then sum(fmember_cnt_num) end) as hh_cnt
		             , (case when substr(bord.adm_cd, 1, 5) = ''||#{sido_cd}||''||''||#{sgg_cd}||'' then sum(fmember_cnt_num) end) as h_cnt
		             , (case when substr(bord.adm_cd, 1, 7) = ''||#{sido_cd}||''||''||#{sgg_cd}||''||''||#{emdong_cd}||'' then sum(fmember_cnt_num) end) as base_cnt
			 from (
			 	   select tot_reg_cd
		                , sum(fmember_cnt) fmember_cnt 
		                , count(fmember_cnt) fmember_cnt_num 
			       from srv_dt_ogacensus_${year} ogacensus
			       INNER JOIN srv_pt_bd bd
                  		 ON ogacensus.sufid = bd.sufid 
			       <where>
			       <if test='oga_div != "0" '>
					   and oga_div=#{oga_div}
				   </if>
				   </where>
		         group by tot_reg_cd) oga
		             , (select tot_reg_cd 
		                     , a.sido_cd||a.sgg_cd||a.emdong_cd adm_cd 
		                     , b.emdong_nm adm_nm 
		                     , a.base_year as year
		                 from srv_pg_totregbord a, srv_pg_admbord b
		                 where   a.base_year = #{bnd_year}
			                 and a.base_year=b.base_year 
							 and a.sido_cd=b.sido_cd
							 and a.sgg_cd=b.sgg_cd
							 and a.emdong_cd=b.emdong_cd
		                )bord 
		         where oga.tot_reg_cd = bord.tot_reg_cd 
		         group by  bord.adm_cd ,bord.adm_nm 
		        )
	</select>
 
 	
	<select id="forestryhousehold" parameterType="hashmap" resultType="hashmap">
		select nvl(sum(hhh_cnt), 0) hhh_cnt
		     , nvl(sum(hh_cnt), 0) hh_cnt
		     , nvl(sum(h_cnt), 0) h_cnt
		     , nvl(sum(base_cnt), 0) base_cnt
		  from (select nvl(sum(fmember_cnt_num),0) hhh_cnt 
		             , (case when substr(bord.adm_cd, 1, 2) = ''||#{sido_cd}||'' then sum(fmember_cnt_num) end) as hh_cnt
		             , (case when substr(bord.adm_cd, 1, 5) = ''||#{sido_cd}||''||''||#{sgg_cd}||'' then sum(fmember_cnt_num) end) as h_cnt
		             , (case when substr(bord.adm_cd, 1, 7) = ''||#{sido_cd}||''||''||#{sgg_cd}||''||''||#{emdong_cd}||'' then sum(fmember_cnt_num) end) as base_cnt
			 from (
			 	   select tot_reg_cd
		                , sum(fmember_cnt) fmember_cnt 
		                , count(fmember_cnt) fmember_cnt_num 
			       from srv_dt_imgacensus_${year} imgacensus
			       INNER JOIN srv_pt_bd bd
                  		 ON imgacensus.sufid = bd.sufid
		         group by tot_reg_cd) imga
		             , (select tot_reg_cd 
		                     , a.sido_cd||a.sgg_cd||a.emdong_cd adm_cd 
		                     , b.emdong_nm adm_nm 
		                     , a.base_year as year 
		                  from srv_pg_totregbord a, srv_pg_admbord b
		                  where  a.base_year = #{bnd_year}
			                 and a.base_year=b.base_year 
							 and a.sido_cd=b.sido_cd
							 and a.sgg_cd=b.sgg_cd
							 and a.emdong_cd=b.emdong_cd
		                )bord 
		         where imga.tot_reg_cd = bord.tot_reg_cd 
		         group by  bord.adm_cd ,bord.adm_nm 
		        )
	</select>
 
	 
	<select id="farmhousehold" parameterType="hashmap" resultType="hashmap">
			select nvl(sum(hhh_cnt), 0) hhh_cnt
		     , nvl(sum(hh_cnt), 0) hh_cnt
		     , nvl(sum(h_cnt), 0) h_cnt
		     , nvl(sum(base_cnt), 0) base_cnt
		  from (select nvl(sum(fmember_cnt),0) hhh_cnt 
		             , (case when substr(bord.adm_cd, 1, 2) = ''||#{sido_cd}||'' then sum(fmember_cnt) end) as hh_cnt
		             , (case when substr(bord.adm_cd, 1, 5) = ''||#{sido_cd}||''||''||#{sgg_cd}||'' then sum(fmember_cnt) end) as h_cnt
		             , (case when substr(bord.adm_cd, 1, 7) = ''||#{sido_cd}||''||''||#{sgg_cd}||''||''||#{emdong_cd}||'' then sum(fmember_cnt) end) as base_cnt
			 from (
			 	   select tot_reg_cd
		                , sum(fmember_cnt) fmember_cnt 
		                , count(fmember_cnt) fmember_cnt_num 
			       from srv_dt_nonggacensus_${year} nonggacensus
			       INNER JOIN srv_pt_bd bd
                  		 ON nonggacensus.sufid = bd.sufid
		         group by tot_reg_cd) nongga
		             , (select tot_reg_cd 
		                     , a.sido_cd||a.sgg_cd||a.emdong_cd adm_cd 
		                     , b.emdong_nm adm_nm 
		                     , a.base_year as year
		                  from srv_pg_totregbord a, srv_pg_admbord b
		                  where  a.base_year = #{bnd_year}
			                 and a.base_year=b.base_year 
							 and a.sido_cd=b.sido_cd
							 and a.sgg_cd=b.sgg_cd
							 and a.emdong_cd=b.emdong_cd
		                )bord 
		         where nongga.tot_reg_cd = bord.tot_reg_cd 
		         group by  bord.adm_cd ,bord.adm_nm 
		        )
	</select>
	
	 
	<select id="householdmember" parameterType="hashmap" resultType="hashmap">
			select nvl(sum(hhh_cnt), 0) hhh_cnt
		     , nvl(sum(hh_cnt), 0) hh_cnt
		     , nvl(sum(h_cnt), 0) h_cnt
		     , nvl(sum(base_cnt), 0) base_cnt
		  from (select nvl(sum(fmember_no),0) hhh_cnt 
		             , (case when substr(bord.adm_cd, 1, 2) = ''||#{sido_cd}||'' then sum(fmember_no) end) as hh_cnt
		             , (case when substr(bord.adm_cd, 1, 5) = ''||#{sido_cd}||''||''||#{sgg_cd}||'' then sum(fmember_no) end) as h_cnt
		             , (case when substr(bord.adm_cd, 1, 7) = ''||#{sido_cd}||''||''||#{sgg_cd}||''||''||#{emdong_cd}||'' then sum(fmember_no) end) as base_cnt
			 from (
			 	   select tot_reg_cd
		                , count(fmember_no) fmember_no 
			       from srv_dt_nongimogacensusfamily_${year} nongimogacensusfamily
			       INNER JOIN srv_pt_bd bd
                  		 ON nongimogacensusfamily.sufid = bd.sufid
		           <where>  
		           	  <if test='data_type != null '>
						  and data_type=#{data_type}
					  </if>
					  <if test='gender != "0" '>
						  and gender=#{gender}
					  </if>
					  <if test='age_from != null '>
						  and age <![CDATA[>=]]> #{age_from}
						  and age <![CDATA[<=]]> #{age_to}
					  </if>
		           </where>
		         group by tot_reg_cd) fmember
		             , (select tot_reg_cd 
		                     , a.sido_cd||a.sgg_cd||a.emdong_cd adm_cd 
		                     , b.emdong_nm adm_nm 
		                     , a.base_year as year
		                  from srv_pg_totregbord a, srv_pg_admbord b
		                  where  a.base_year = #{bnd_year}
			                 and a.base_year=b.base_year 
							 and a.sido_cd=b.sido_cd
							 and a.sgg_cd=b.sgg_cd
							 and a.emdong_cd=b.emdong_cd
		                )bord 
		         where fmember.tot_reg_cd = bord.tot_reg_cd 
		         group by  bord.adm_cd ,bord.adm_nm 
		        )
	</select>
 
 
 
	<!-- 산업체 코드 조회 -->
	<select id="industrycode" parameterType="hashmap" resultType="hashmap">
		select 
			distinct
		<if test='code_length == null '>
			ksic_1_cd class_code
		  , ksic_1_nm class_nm
		</if>
		<if test='code_length == "1" '>
			ksic_1_cd||ksic_2_cd class_code
		  , ksic_2_nm class_nm
		</if>
		<if test='code_length == "3" '>
			ksic_1_cd||ksic_3_cd class_code
		  , ksic_3_nm class_nm
		</if>
		<if test='code_length == "4" '>
			ksic_1_cd||ksic_4_cd class_code
		  , ksic_4_nm class_nm
		</if>
		<if test='code_length == "5" or code_length == "6" '>	
			ksic_1_cd||ksic_5_cd class_code
		  , ksic_5_nm class_nm
		</if>
		from cmm_cd_corpclass
		where 
			class_deg = #{class_deg}
			and ksic_1_cd != '0'
		<if test='code_length != null '>
			and ksic_1_cd=#{ksic1}
		</if>
		<if test='class_code != null and code_length != "1" '>
			and ksic_5_cd like #{ksic5}||'%'
		</if> 
		group by 
		<if test='code_length == null '>
			ksic_1_cd
		  , ksic_1_nm
		</if>
		<if test='code_length == "1" '>
			ksic_1_cd
		  , ksic_1_nm
		  , ksic_2_cd
		  , ksic_2_nm
		</if>
		<if test='code_length == "3" '>
			ksic_1_cd
		  , ksic_1_nm
		  , ksic_2_cd
		  , ksic_2_nm
		  , ksic_3_nm
		  , ksic_3_nm
		</if>
		<if test='code_length == "4" '>
			ksic_1_cd
		  , ksic_1_nm
		  , ksic_2_cd
		  , ksic_2_nm
		  , ksic_3_cd
		  , ksic_3_nm
		  , ksic_4_cd
		  , ksic_4_nm
		</if>
		<if test='code_length == "5" or code_length == "6" '>	
			ksic_1_cd
		  , ksic_1_nm
		  , ksic_2_cd
		  , ksic_2_nm
		  , ksic_3_cd
		  , ksic_3_nm
		  , ksic_4_cd
		  , ksic_4_nm
		  , ksic_5_cd
		  , ksic_5_nm
		</if>
	</select>
	
	<!-- 2016. 10. 06 수정  --> 
	<select id="company" parameterType="hashmap" resultType="hashmap">
		select nvl(sum(hhh_corp_cnt), 0) corp_hhh_cnt
			   , nvl(sum(hh_corp_cnt), 0) corp_hh_cnt
			   , nvl(sum(h_corp_cnt), 0) corp_h_cnt
			   , nvl(sum(base_corp_cnt), 0) corp_base_cnt
 			   , nvl(sum(hhh_worker_cnt), 0) worker_hhh_cnt
			   , nvl(sum(hh_worker_cnt), 0) worker_hh_cnt
			   , nvl(sum(h_worker_cnt), 0) worker_h_cnt
			   , nvl(sum(base_worker_cnt), 0) worker_base_cnt
			from 
				(
					select
		  				nvl(sum(corp_cnt),0) hhh_corp_cnt
						, (case when sido_cd = ''||#{sido_cd}||'' then sum(corp_cnt) end) as hh_corp_cnt
						, (case when sido_cd = ''||#{sido_cd}||'' and sgg_cd = ''||#{sgg_cd}||'' then sum(corp_cnt) end) as h_corp_cnt
						, (case when sido_cd = ''||#{sido_cd}||'' and sgg_cd = ''||#{sgg_cd}||'' and emdong_cd = ''||#{emdong_cd}||'' then sum(corp_cnt) end) as base_corp_cnt
						, nvl(sum(employee_cnt),0) hhh_worker_cnt
						, (case when sido_cd = ''||#{sido_cd}||'' then sum(employee_cnt) end) as hh_worker_cnt
						, (case when sido_cd = ''||#{sido_cd}||'' and sgg_cd = ''||#{sgg_cd}||'' then sum(employee_cnt) end) as h_worker_cnt
						, (case when sido_cd = ''||#{sido_cd}||'' and sgg_cd = ''||#{sgg_cd}||'' and emdong_cd = ''||#{emdong_cd}||'' then sum(employee_cnt) end) as base_worker_cnt
					from 
						(
							select substr(tot_reg_cd, 0, 2) as sido_cd, 
								   substr(tot_reg_cd, 3, 3) as sgg_cd, 
								   substr(tot_reg_cd, 6, 2) as emdong_cd, 
								   sum(corp_cnt) corp_cnt, 
								   sum(employee_cnt) employee_cnt
							from 
							<!-- mng_s 20170908 leekh -->
								<if test='theme_cd != null'>
					  	  			srv_dt_corpthemereg with (nolock)
					  			</if>
					  			<if test='theme_cd == null'>
					  	  			srv_dt_corpclassreg	 with (nolock)
					  			</if>
							<!-- mng_s 20170908 leekh -->
							where base_year = ''||#{year}||'' 
							
							<if test='code_length != null'>
		           			 	<if test='code_length == 1'>
					  	  			and ksic_1_cd = #{ksic1} 
					  	  		</if>	
					  	  		<if test='code_length != 1'>
					  	  			and ksic_5_cd like #{ksic5}||'%' 
					  	  		</if>
					  		</if>
		           			    <if test='theme_cd != null'>
					  	  			and theme_cd like #{theme_cd}||'%'
					  			</if>
							group by substr(tot_reg_cd, 0, 2), substr(tot_reg_cd, 3, 3), substr(tot_reg_cd, 6, 2)
						)
			group by sido_cd, sgg_cd, emdong_cd
		)	
	</select>
	
	<!-- 9월 서비스 -->
	<!-- 결합조건 (인구, 가구 또는 인구, 주택 또는 가구, 주택 또는 인구,가구,주택 결합일 경우) -->
	<select id="fusionstats" parameterType="hashmap" resultType="hashmap">
		<!-- 전국일 경우 -->
		<if test='adm_cd == null'>
			select bord.sido_cd as adm_cd,    
					bord.sido_nm adm_nm,        
					A.data_cnt  
			from 
					(
		    			select	substr(tot_reg_cd, 1, 2) sido_cd, 
	        				<if test='combine_base  == "population" '>
	        					CASE WHEN COUNT(fmember_no) <![CDATA[<=]]> 4 THEN 'N/A' 
	        							WHEN COUNT(fmember_no) <![CDATA[>]]> 4 THEN COUNT(fmember_no) END as data_cnt
	        				</if>
	        				<if test='combine_base  == "household" '>
	        					CASE WHEN COUNT(distinct adm_cd||resid_ed_no||resid_no||family_no) <![CDATA[<=]]> 4 THEN 'N/A'
										WHEN COUNT(distinct adm_cd||resid_ed_no||resid_no||family_no) <![CDATA[>]]> 4 THEN 
												COUNT(distinct adm_cd||resid_ed_no||resid_no||family_no) END as data_cnt
	        				</if>
	        				<if test='combine_base  == "house" '>
								CASE WHEN COUNT(distinct adm_cd||resid_ed_no||resid_no) <![CDATA[<=]]> 4 THEN 'N/A'
										WHEN COUNT(distinct adm_cd||resid_ed_no||resid_no) <![CDATA[>]]> 4 THEN 
												COUNT(distinct adm_cd||resid_ed_no||resid_no) END as data_cnt
							</if>
		    			from 
		       		 			(
		            				select	ppl.sufid,
		                					ppl.fmember_no,
		                					family.adm_cd,
											family.resid_ed_no,
											family.resid_no,
											family.family_no,
		                					family.rd_tot_fmember_cnt,
		                					bd.tot_reg_cd
		            				from
		            						srv_dt_ppltncensus_${year} with(tablock) ppl ,
											srv_dt_familycensus_${year} with(tablock) family,
											srv_pt_bd with(tablock) bd
									where
		 									ppl.ppltn_family_join_key = family.ppltn_family_join_key
											and ppl.sufid = bd.sufid 
											
	                						<if test='(fusion_query_type == "population_household_house") or (fusion_query_type == "population_house") or (fusion_query_type == "household_house")'>
	                							and family.house_yn = 'Y' 
	 										</if>
	                						<if test='(fusion_query_type == "population_household_house") or (fusion_query_type == "population_household") or (fusion_query_type == "household_house")'>
	                							and family.family_yn = 'Y'
	                						</if>
	                						<if test='(gender != "0") and (gender != null)'>
												and gender=#{gender}
											</if>
											<if test='age_from != null '>
												and age <![CDATA[>=]]> #{age_from}
												and age <![CDATA[<=]]> #{age_to}
											</if>
											<if test='edu_level != null '>
												and rd_edu_level in
												<foreach  collection="edu_level" item="edu" open="(" separator="," close=")">
												  	#{edu}
												</foreach>
											</if>
											<if test='mrg_state != null '>
												and rd_mrg_state in
												<foreach  collection="mrg_state" item="mrg" open="(" separator="," close=")">
												  	#{mrg}
												</foreach>
											</if>
											<if test='household_type != null '>
												and rd_household_type in
											  	<foreach collection="household_type" item="household" open="(" separator="," close=")">
											 	 	#{household}
											  	</foreach>
										    </if>
											<if test='ocptn_type != null '>
												   and rd_ocptn_type in
												<foreach collection="ocptn_type" item="ocptn" open="(" separator="," close=")">
												  	#{ocptn}
												</foreach>
											</if>
											<if test='house_type != null '>
												and rd_resid_1_type in
												<foreach  collection="house_type" item="type" open="(" separator="," close=")">
												  	#{type}
												</foreach>
										    </if>
										    <if test='const_year != null '>
											    and rd_const_year = #{const_year}
										    </if>
										    <if test='house_area_param != null '>
										      and ${house_area_param}
										   </if>
<!-- 										    <if test='bdspace_from != null '> -->
<!-- 											    and rd_bdspace_mm <![CDATA[>=]]> #{bdspace_from} -->
<!-- 											    and rd_bdspace_mm <![CDATA[<=]]> #{bdspace_to} -->
<!-- 										    </if> -->
								)
						group by substr(tot_reg_cd, 1, 2)
					) A,
					(
						select sido_cd, sido_nm from srv_pg_sidobord where base_year = #{bnd_year}
					) bord
			where A.sido_cd = bord.sido_cd
		</if>
		
		<!-- 나머지 시도, 시군구, 읍면동일 경우 -->
		<if test='adm_cd != null'>
			select	AA.adm_cd,
					AA.data_cnt
				<if test='(adm_length  != "7" or low_search  == "1") and (adm_length  != "13") '>
					,bord.adm_nm
				</if>
			from
					(
				    	select	A.tot_reg_cd as adm_cd,
			        		<if test='combine_base  == "population" '>
	        					CASE WHEN COUNT(A.fmember_no) <![CDATA[<=]]> 4 THEN 'N/A' 
	        							WHEN COUNT(A.fmember_no) <![CDATA[>]]> 4 THEN COUNT(A.fmember_no) END as data_cnt
	        				</if>
	        				<if test='combine_base  == "household" '>
	        					CASE WHEN COUNT(distinct B.adm_cd||B.resid_ed_no||B.resid_no||B.family_no) <![CDATA[<=]]> 4 THEN 'N/A'
										WHEN COUNT(distinct B.adm_cd||B.resid_ed_no||B.resid_no||B.family_no) <![CDATA[>]]> 4 THEN 
												COUNT(distinct B.adm_cd||B.resid_ed_no||B.resid_no||B.family_no) END as data_cnt
	        				</if>
	        				<if test='combine_base  == "house" '>
								CASE WHEN COUNT(distinct B.adm_cd||B.resid_ed_no||B.resid_no) <![CDATA[<=]]> 4 THEN 'N/A'
										WHEN COUNT(distinct B.adm_cd||B.resid_ed_no||B.resid_no) <![CDATA[>]]> 4 THEN 
												COUNT(distinct B.adm_cd||B.resid_ed_no||B.resid_no) END as data_cnt
							</if>
				    	from
				        		(
	                				select 	ppl.*
	                				, 			bd.sufid,
                						<if test='(adm_length  == "2" and low_search  == "1")'>
                							substr(bd.tot_reg_cd, 1, 2) as tot_reg_cd
                						</if>
                						<if test='(adm_length  == "2" and low_search  == "0")or(adm_length  == "5" and low_search  == "1")'>
                							substr(bd.tot_reg_cd, 1, 5) as tot_reg_cd
                						</if>
                						<if test='(adm_length  == "5" and low_search  == "0")or(adm_length  == "7" and low_search  == "1")'>
                							substr(bd.tot_reg_cd, 1, 7) as tot_reg_cd
                						</if>
                						<if test='(adm_length  == "7" and low_search  == "0") or adm_length == "13" '>
                							bd.tot_reg_cd
                						</if>													
									from		srv_dt_ppltncensus_${year} ppl,								
												(															
													select  	sufid,											
																tot_reg_cd										
													from    	srv_pt_bd										
													where   	tot_reg_cd like ${adm_cd} || '%'		 
												) bd							
									where ppl.sufid = bd.sufid							 
	                					<if test='(gender != "0") and (gender != null)'>
											and gender=#{gender}
										</if>
										<if test='age_from != null '>
											and age <![CDATA[>=]]> #{age_from}
											and age <![CDATA[<=]]> #{age_to}
										</if>
										<if test='edu_level != null '>
											and rd_edu_level in
											<foreach  collection="edu_level" item="edu" open="(" separator="," close=")">
											  	#{edu}
											</foreach>
										</if>
										<if test='mrg_state != null '>
											and rd_mrg_state in
											<foreach  collection="mrg_state" item="mrg" open="(" separator="," close=")">
											  	#{mrg}
											</foreach>
										</if>
				        		) A,
				        		(
				            		select * 
				            		from
				                			(
				                				select * 
		                						from 	srv_dt_familycensus_${year} 
		                						where	1=1
		                						<if test='(fusion_query_type == "population_household_house") or (fusion_query_type == "population_house") or (fusion_query_type == "household_house")'>
		                							and house_yn = 'Y'
		 										</if>
		                						<if test='(fusion_query_type == "population_household_house") or (fusion_query_type == "population_household") or (fusion_query_type == "household_house")'>
		                							and family_yn = 'Y' 
		                						</if>
		                						<if test='household_type != null '>
													and rd_household_type in
												  	<foreach collection="household_type" item="household" open="(" separator="," close=")">
												 	 	#{household}
												  	</foreach>
											    </if>
												<if test='ocptn_type != null '>
													   and rd_ocptn_type in
													<foreach collection="ocptn_type" item="ocptn" open="(" separator="," close=")">
													  	#{ocptn}
													</foreach>
												</if>
												<if test='house_type != null '>
													and rd_resid_1_type in
													<foreach  collection="house_type" item="type" open="(" separator="," close=")">
													  	#{type}
													</foreach>
											    </if>
											    <if test='const_year != null '>
												    and rd_const_year = #{const_year}
											    </if>
											    <if test='house_area_param != null '>
											      and ${house_area_param}
											   </if>
<!-- 											    <if test='bdspace_from != null '> -->
<!-- 												    and rd_bdspace_mm <![CDATA[>=]]> #{bdspace_from} -->
<!-- 												    and rd_bdspace_mm <![CDATA[<=]]> #{bdspace_to} -->
<!-- 											    </if> -->
				                			) family,
				                			(
				                				select	sufid
				                				from	srv_pt_bd
				                				where	tot_reg_cd like ${adm_cd} || '%'
				                			) bd
				           	 		where	family.sufid = bd.sufid
				        		) B
				    	where	A.ppltn_family_join_key = B.ppltn_family_join_key
				    	group by	A.tot_reg_cd
					) AA
					<!-- 시도, 시군구일 경우 (전국, 집계구는 실행X) -->
					<if test='(adm_length  != "7" or low_search  == "1") and (adm_length  != "13") '>
							, (
							    select distinct
								    <if test='(adm_length  == "2" and low_search  == "0")or(adm_length  == "5" and low_search  == "1")'>
								    	sido_cd||sgg_cd as adm_cd,
										sgg_nm as adm_nm
									</if>
									<if test='(adm_length  == "5" and low_search  == "0")or(adm_length  == "7" and low_search  == "1")'>
										sido_cd||sgg_cd||emdong_cd as adm_cd,
										emdong_nm as adm_nm
									</if>
							    from srv_pg_admbord 
							    where base_year = #{bnd_year}
							    <if test='(adm_length  == "2" and low_search  == "0")or(adm_length  == "5" and low_search  == "1")'>
							    	and sido_cd = #{sido_cd}
							    </if>
							    <if test='(adm_length  == "5" and low_search  == "0")or(adm_length  == "7" and low_search  == "1")'>
									and sido_cd = #{sido_cd}
									and sgg_cd = #{sgg_cd}
								</if>
							) bord
						where	AA.adm_cd = bord.adm_cd
					</if>
		</if>
	</select>

	<!-- 결합조건 (가구, 주택 결합일 경우) -->
	<select id="fusionstatsHouse" parameterType="hashmap" resultType="hashmap">
		<!-- 전국일 경우 -->
		<if test='adm_cd == null'>
			select bord.sido_cd as adm_cd,    
					bord.sido_nm adm_nm,        
					A.data_cnt  
			from 
					(
		    			select	substr(tot_reg_cd, 1, 2) sido_cd, 
	        				<if test='combine_base  == "household" '>
	        					CASE WHEN COUNT(distinct adm_cd||resid_ed_no||resid_no||family_no) <![CDATA[<=]]> 4 THEN 'N/A'
										WHEN COUNT(distinct adm_cd||resid_ed_no||resid_no||family_no) <![CDATA[>]]> 4 THEN 
												COUNT(distinct adm_cd||resid_ed_no||resid_no||family_no) END as data_cnt
	        				</if>
	        				<if test='combine_base  == "house" '>
								CASE WHEN COUNT(distinct adm_cd||resid_ed_no||resid_no) <![CDATA[<=]]> 4 THEN 'N/A'
										WHEN COUNT(distinct adm_cd||resid_ed_no||resid_no) <![CDATA[>]]> 4 THEN 
												COUNT(distinct adm_cd||resid_ed_no||resid_no) END as data_cnt
							</if>
		    			from 
		       		 			(
		            				select	family.sufid,
		                					family.adm_cd,
											family.resid_ed_no,
											family.resid_no,
											family.family_no,
		                					family.rd_tot_fmember_cnt,
		                					bd.tot_reg_cd
		            				from
											srv_dt_familycensus_${year} with(tablock) family,
											srv_pt_bd with(tablock) bd
									where
		 									1=1
											and family.sufid = bd.sufid 
	                						and family.house_yn = 'Y' 
	                						and family.family_yn = 'Y'
											<if test='household_type != null '>
												and rd_household_type in
											  	<foreach collection="household_type" item="household" open="(" separator="," close=")">
											 	 	#{household}
											  	</foreach>
										    </if>
											<if test='ocptn_type != null '>
												   and rd_ocptn_type in
												<foreach collection="ocptn_type" item="ocptn" open="(" separator="," close=")">
												  	#{ocptn}
												</foreach>
											</if>
											<if test='house_type != null '>
												and rd_resid_1_type in
												<foreach  collection="house_type" item="type" open="(" separator="," close=")">
												  	#{type}
												</foreach>
										    </if>
										    <if test='const_year != null '>
											    and rd_const_year = #{const_year}
										    </if>
										    <if test='house_area_param != null '>
										      	and ${house_area_param}
										   	</if>
<!-- 										    <if test='bdspace_from != null '> -->
<!-- 											    and rd_bdspace_mm <![CDATA[>=]]> #{bdspace_from} -->
<!-- 											    and rd_bdspace_mm <![CDATA[<=]]> #{bdspace_to} -->
<!-- 										    </if> -->
								)
						group by substr(tot_reg_cd, 1, 2)
					) A,
					(
						select sido_cd, sido_nm from srv_pg_sidobord where base_year = #{bnd_year}
					) bord
			where A.sido_cd = bord.sido_cd
		</if>
		
		<!-- 나머지 시도, 시군구, 읍면동일 경우 -->
		<if test='adm_cd != null'>
			select	AA.adm_cd,
					AA.data_cnt
				<if test='(adm_length  != "7" or low_search  == "1") and (adm_length  != "13") '>
					,bord.adm_nm
				</if>
			from
					(
				    	select	tot_reg_cd as adm_cd,
	        				<if test='combine_base  == "household" '>
	        					CASE WHEN COUNT(distinct adm_cd||resid_ed_no||resid_no||family_no) <![CDATA[<=]]> 4 THEN 'N/A'
										WHEN COUNT(distinct adm_cd||resid_ed_no||resid_no||family_no) <![CDATA[>]]> 4 THEN 
												COUNT(distinct adm_cd||resid_ed_no||resid_no||family_no) END as data_cnt
	        				</if>
	        				<if test='combine_base  == "house" '>
								CASE WHEN COUNT(distinct adm_cd||resid_ed_no||resid_no) <![CDATA[<=]]> 4 THEN 'N/A'
										WHEN COUNT(distinct adm_cd||resid_ed_no||resid_no) <![CDATA[>]]> 4 THEN 
												COUNT(distinct adm_cd||resid_ed_no||resid_no) END as data_cnt
							</if>
				    	from
	                			(
	                				select * 
               						from 	srv_dt_familycensus_${year} 
               						where	1=1
              						and house_yn = 'Y'
              						and family_yn = 'Y' 
               						<if test='household_type != null '>
										and rd_household_type in
									  	<foreach collection="household_type" item="household" open="(" separator="," close=")">
									 	 	#{household}
									  	</foreach>
								    </if>
									<if test='ocptn_type != null '>
										   and rd_ocptn_type in
										<foreach collection="ocptn_type" item="ocptn" open="(" separator="," close=")">
										  	#{ocptn}
										</foreach>
									</if>
									<if test='house_type != null '>
										and rd_resid_1_type in
										<foreach  collection="house_type" item="type" open="(" separator="," close=")">
										  	#{type}
										</foreach>
								    </if>
								    <if test='const_year != null '>
									    and rd_const_year = #{const_year}
								    </if>
								    <if test='house_area_param != null '>
								      	and ${house_area_param}
								   	</if>
<!-- 								    <if test='bdspace_from != null '> -->
<!-- 									    and rd_bdspace_mm <![CDATA[>=]]> #{bdspace_from} -->
<!-- 									    and rd_bdspace_mm <![CDATA[<=]]> #{bdspace_to} -->
<!-- 								    </if> -->
	                			) family,
	                			(
	                				select	sufid,
	                				<if test='(adm_length  == "2" and low_search  == "1")'>
		       							substr(tot_reg_cd, 1, 2) as tot_reg_cd
		       						</if>
		       						<if test='(adm_length  == "2" and low_search  == "0")or(adm_length  == "5" and low_search  == "1")'>
		       							substr(tot_reg_cd, 1, 5) as tot_reg_cd
		       						</if>
		       						<if test='(adm_length  == "5" and low_search  == "0")or(adm_length  == "7" and low_search  == "1")'>
		       							substr(tot_reg_cd, 1, 7) as tot_reg_cd
		       						</if>
		       						<if test='(adm_length  == "7" and low_search  == "0") or adm_length == "13" '>
		       							tot_reg_cd
		       						</if>
	                				from	srv_pt_bd
	                				where	tot_reg_cd like ${adm_cd} || '%'
	                			) bd
	           	 		where	family.sufid = bd.sufid
				    	group by	 tot_reg_cd
					) AA
					<!-- 시도, 시군구일 경우 (전국, 집계구는 실행X) -->
					<if test='(adm_length  != "7" or low_search  == "1") and (adm_length  != "13") '>
							, (
							    select distinct
								    <if test='(adm_length  == "2" and low_search  == "0")or(adm_length  == "5" and low_search  == "1")'>
								    	sido_cd||sgg_cd as adm_cd,
										sgg_nm as adm_nm
									</if>
									<if test='(adm_length  == "5" and low_search  == "0")or(adm_length  == "7" and low_search  == "1")'>
										sido_cd||sgg_cd||emdong_cd as adm_cd,
										emdong_nm as adm_nm
									</if>
							    from srv_pg_admbord 
							    where base_year = #{bnd_year}
							    <if test='(adm_length  == "2" and low_search  == "0")or(adm_length  == "5" and low_search  == "1")'>
							    	and sido_cd = #{sido_cd}
							    </if>
							    <if test='(adm_length  == "5" and low_search  == "0")or(adm_length  == "7" and low_search  == "1")'>
									and sido_cd = #{sido_cd}
									and sgg_cd = #{sgg_cd}
								</if>
							) bord
						where	AA.adm_cd = bord.adm_cd
					</if>
		</if>
	</select>
	
	<!-- 9월 서비스 -->
	<!-- 결합조건 (인구, 가구 또는 인구, 주택 또는 인구,가구,주택 결합일 경우) -->
	<select id="fusionstats_2015" parameterType="hashmap" resultType="hashmap">
		<!-- 전국일 경우 -->
		<if test='adm_cd == null'>
			select bord.sido_cd as adm_cd,    
					bord.sido_nm adm_nm,        
					A.data_cnt  
			from 
					(
		    			select	substr(tot_reg_cd, 1, 2) sido_cd, 
	        				<if test='combine_base  == "population" '>
	        					<!-- 2017. 06. 27 j.h.Seok DB 표준화 작업 -->
	        					CASE WHEN COUNT(*) <![CDATA[<=]]> 4 THEN 'N/A' 
	        							WHEN COUNT(*) <![CDATA[>]]> 4 THEN 
												COUNT(*) END as data_cnt
	        				</if>
	        				<if test='combine_base  == "household" '>
	        					CASE WHEN COUNT(distinct family_key) <![CDATA[<=]]> 4 THEN 'N/A'
										WHEN COUNT(distinct family_key) <![CDATA[>]]> 4 THEN 
												COUNT(distinct family_key) END as data_cnt
	        				</if>
	        				<if test='combine_base  == "house" '>
								CASE WHEN COUNT(distinct resid_key) <![CDATA[<=]]> 4 THEN 'N/A'
										WHEN COUNT(distinct resid_key) <![CDATA[>]]> 4 THEN 
												COUNT(distinct resid_key) END as data_cnt
							</if>
		    			from 
		       		 			(
		            				select	ppl.sufid,
		            						<!-- 2017. 06. 27 j.h.Seok DB 표준화 작업 -->
		                					<!-- ppl.person_key||ppl.family_key as psn_key,-->
		                					<!-- ppl.person_key as psn_key,-->
		                					family.adm_cd,
											family.family_key,
		                					family.rd_tot_fmember_cnt,
											house.resid_key,
		                					bd.tot_reg_cd
		            				from
		            						srv_dt_ppltncensus_${year} with(tablock) ppl ,
											srv_dt_familycensus_${year} with(tablock) family,
											srv_dt_housecensus_${year} with(tablock) house,
											srv_pt_bd with(tablock) bd
									where
		 									ppl.family_key = family.family_key
											and family.resid_key = house.resid_key
											and ppl.sufid = bd.sufid 
											
	                						<if test='(fusion_query_type == "population_household_house") or (fusion_query_type == "population_house") or (fusion_query_type == "household_house")'>
	                							and house.house_yn = 'Y' 
	 										</if>
	                						<if test='(fusion_query_type == "population_household_house") or (fusion_query_type == "population_household") or (fusion_query_type == "household_house")'>
	                							and family.family_yn = 'Y'
	                						</if>
	                						<if test='(gender != "0") and (gender != null)'>
												and gender = #{gender}
											</if>
											<if test='age_from != null '>
												and age <![CDATA[>=]]> #{age_from}
												and age <![CDATA[<=]]> #{age_to}
											</if>
											<if test='household_type != null '>
												and rd_household_type in
											  	<foreach collection="household_type" item="household" open="(" separator="," close=")">
											 	 	#{household}
											  	</foreach>
										    </if>
											<if test='house_type != null '>
												and rd_resid_1_type in
												<foreach  collection="house_type" item="type" open="(" separator="," close=")">
												  	#{type}
												</foreach>
										    </if>
										    <if test='house_area_cd != null '>
												and house_area_cd in
												<foreach  collection="house_area_cd" item="house_area_type" open="(" separator="," close=")">
													#{house_area_type}
												</foreach>
											</if>
										    <if test='house_use_prid_cd != null '>
											    and house_use_prid_cd = #{house_use_prid_cd}
										    </if>
								)
						group by substr(tot_reg_cd, 1, 2)
					) A,
					(
						select sido_cd, sido_nm from srv_pg_sidobord where base_year = #{bnd_year}
					) bord
			where A.sido_cd = bord.sido_cd
		</if>
		
		<!-- 나머지 시도, 시군구, 읍면동일 경우 -->
		<if test='adm_cd != null'>
			select	AA.adm_cd,
					AA.data_cnt
				<if test='(adm_length  != "7" or low_search  == "1") and (adm_length  != "13") '>
					,bord.adm_nm
				</if>
			from
					(
				    	select	A.tot_reg_cd as adm_cd,
			        		<if test='combine_base  == "population" '>
			        			<!-- 2017. 06. 27 j.h.Seok DB 표준화 작업 -->
	        					CASE WHEN COUNT(*) <![CDATA[<=]]> 4 THEN 'N/A' 
	        							WHEN COUNT(*) <![CDATA[>]]> 4 THEN 
												COUNT(*) END as data_cnt
	        				</if>
	        				<if test='combine_base  == "household" '>
	        					CASE WHEN COUNT(distinct B.family_key) <![CDATA[<=]]> 4 THEN 'N/A'
										WHEN COUNT(distinct B.family_key) <![CDATA[>]]> 4 THEN 
												COUNT(distinct B.family_key) END as data_cnt
	        				</if>
	        				<if test='combine_base  == "house" '>
								CASE WHEN COUNT(distinct C.resid_key) <![CDATA[<=]]> 4 THEN 'N/A'
										WHEN COUNT(distinct C.resid_key) <![CDATA[>]]> 4 THEN 
												COUNT(distinct C.resid_key) END as data_cnt
							</if>
				    	from
				        		(
	                				select 	ppl.*
	                				, 			bd.sufid,
                						<if test='(adm_length  == "2" and low_search  == "1")'>
                							substr(bd.tot_reg_cd, 1, 2) as tot_reg_cd
                						</if>
                						<if test='(adm_length  == "2" and low_search  == "0")or(adm_length  == "5" and low_search  == "1")'>
                							substr(bd.tot_reg_cd, 1, 5) as tot_reg_cd
                						</if>
                						<if test='(adm_length  == "5" and low_search  == "0")or(adm_length  == "7" and low_search  == "1")'>
                							substr(bd.tot_reg_cd, 1, 7) as tot_reg_cd
                						</if>
                						<if test='(adm_length  == "7" and low_search  == "0") or adm_length == "13" '>
                							bd.tot_reg_cd
                						</if>													
									from		srv_dt_ppltncensus_${year} ppl,								
												(															
													select  	sufid,											
																tot_reg_cd										
													from    	srv_pt_bd										
													where   	tot_reg_cd like ${adm_cd} || '%'		 
												) bd							
									where ppl.sufid = bd.sufid							 
	                					<if test='(gender != "0") and (gender != null)'>
											and gender = #{gender}
										</if>
										<if test='age_from != null '>
											and age <![CDATA[>=]]> #{age_from}
											and age <![CDATA[<=]]> #{age_to}
										</if>
				        		) A,
				        		(
				            		select * 
				            		from
				                			(
				                				select * 
		                						from 	srv_dt_familycensus_${year} 
		                						where	1=1
		                						<if test='(fusion_query_type == "population_household_house") or (fusion_query_type == "population_household") or (fusion_query_type == "household_house")'>
		                							and family_yn = 'Y' 
		                						</if>
		                						<if test='household_type != null '>
													and rd_household_type in
												  	<foreach collection="household_type" item="household" open="(" separator="," close=")">
												 	 	#{household}
												  	</foreach>
											    </if>
				                			) family,
				                			(
				                				select	sufid
				                				from	srv_pt_bd
				                				where	tot_reg_cd like ${adm_cd} || '%'
				                			) bd
				           	 		where	family.sufid = bd.sufid
				        		) B,
				        		(
				            		select * 
				            		from
				                			(
				                				select * 
		                						from 	srv_dt_housecensus_${year} 
		                						where	1=1
		                						<if test='(fusion_query_type == "population_household_house") or (fusion_query_type == "population_house") or (fusion_query_type == "household_house")'>
		                							and house_yn = 'Y'
		 										</if>
												<if test='house_type != null '>
													and rd_resid_1_type in
													<foreach  collection="house_type" item="type" open="(" separator="," close=")">
													  	#{type}
													</foreach>
											    </if>
											    <if test='house_area_cd != null '>
													and house_area_cd in
													<foreach  collection="house_area_cd" item="house_area_type" open="(" separator="," close=")">
														#{house_area_type}
													</foreach>
												</if>
											    <if test='house_use_prid_cd != null '>
												    and house_use_prid_cd = #{house_use_prid_cd}
											    </if>
				                			) house,
				                			(
				                				select	sufid
				                				from	srv_pt_bd
				                				where	tot_reg_cd like ${adm_cd} || '%'
				                			) bd
				           	 		where	house.sufid = bd.sufid
				        		) C
				    	where	A.family_key = B.family_key
								and B.resid_key = C.resid_key 
				    	group by	A.tot_reg_cd
					) AA
					<!-- 시도, 시군구일 경우 (전국, 집계구는 실행X) -->
					<if test='(adm_length  != "7" or low_search  == "1") and (adm_length  != "13") '>
							, (
							    select distinct
								    <if test='(adm_length  == "2" and low_search  == "0")or(adm_length  == "5" and low_search  == "1")'>
								    	sido_cd||sgg_cd as adm_cd,
										sgg_nm as adm_nm
									</if>
									<if test='(adm_length  == "5" and low_search  == "0")or(adm_length  == "7" and low_search  == "1")'>
										sido_cd||sgg_cd||emdong_cd as adm_cd,
										emdong_nm as adm_nm
									</if>
							    from srv_pg_admbord 
							    where base_year = #{bnd_year}
							    <if test='(adm_length  == "2" and low_search  == "0")or(adm_length  == "5" and low_search  == "1")'>
							    	and sido_cd = #{sido_cd}
							    </if>
							    <if test='(adm_length  == "5" and low_search  == "0")or(adm_length  == "7" and low_search  == "1")'>
									and sido_cd = #{sido_cd}
									and sgg_cd = #{sgg_cd}
								</if>
							) bord
						where	AA.adm_cd = bord.adm_cd
					</if>
		</if>
	</select>

	<!-- 9월 서비스 -->
	<!-- 결합조건 (가구, 주택 결합일 경우) -->
	<select id="fusionstatsHouse_2015" parameterType="hashmap" resultType="hashmap">
		<!-- 전국일 경우 -->
		<if test='adm_cd == null'>
			select bord.sido_cd as adm_cd,    
					bord.sido_nm adm_nm,        
					A.data_cnt  
			from 
					(
		    			select	substr(tot_reg_cd, 1, 2) sido_cd, 
	        				<if test='combine_base  == "household" '>
	        					CASE WHEN COUNT(distinct family_key) <![CDATA[<=]]> 4 THEN 'N/A'
										WHEN COUNT(distinct family_key) <![CDATA[>]]> 4 THEN 
												COUNT(distinct family_key) END as data_cnt
	        				</if>
	        				<if test='combine_base  == "house" '>
								CASE WHEN COUNT(distinct resid_key) <![CDATA[<=]]> 4 THEN 'N/A'
										WHEN COUNT(distinct resid_key) <![CDATA[>]]> 4 THEN 
												COUNT(distinct resid_key) END as data_cnt
							</if>
		    			from 
		       		 			(
		            				select	family.sufid,
		                					family.adm_cd,
											family.family_key,
		                					family.rd_tot_fmember_cnt,
											house.resid_key,
		                					bd.tot_reg_cd
		            				from
											srv_dt_familycensus_${year} with(nolock) family,
											srv_dt_housecensus_${year} with(nolock) house,
											srv_pt_bd with(tablock) bd
									where
		 									1=1
											and family.sufid = bd.sufid
											and family.resid_key = house.resid_key											
	                						and house.house_yn = 'Y' 
	                						and family.family_yn = 'Y'
											<if test='household_type != null '>
												and rd_household_type in
											  	<foreach collection="household_type" item="household" open="(" separator="," close=")">
											 	 	#{household}
											  	</foreach>
										    </if>
											<if test='house_type != null '>
												and rd_resid_1_type in
												<foreach  collection="house_type" item="type" open="(" separator="," close=")">
												  	#{type}
												</foreach>
										    </if>
										    <if test='house_area_cd != null '>
												and house_area_cd in
												<foreach  collection="house_area_cd" item="house_area_type" open="(" separator="," close=")">
													#{house_area_type}
												</foreach>
											</if>
										    <if test='house_use_prid_cd != null '>
											    and house_use_prid_cd = #{house_use_prid_cd}
										    </if>
								)
						group by substr(tot_reg_cd, 1, 2)
					) A,
					(
						select sido_cd, sido_nm from srv_pg_sidobord where base_year = #{bnd_year}
					) bord
			where A.sido_cd = bord.sido_cd
		</if>
		
		<!-- 나머지 시도, 시군구, 읍면동일 경우 -->
		<if test='adm_cd != null'>
			select	AA.adm_cd,
					AA.data_cnt
				<if test='(adm_length  != "7" or low_search  == "1") and (adm_length  != "13") '>
					,bord.adm_nm
				</if>
			from
					(
				    	select	family_pt.tot_reg_cd as adm_cd,
	        				<if test='combine_base  == "household" '>
	        					CASE WHEN COUNT(distinct family_key) <![CDATA[<=]]> 4 THEN 'N/A'
										WHEN COUNT(distinct family_key) <![CDATA[>]]> 4 THEN 
												COUNT(distinct family_key) END as data_cnt
	        				</if>
	        				<if test='combine_base  == "house" '>
								CASE WHEN COUNT(distinct family.resid_key) <![CDATA[<=]]> 4 THEN 'N/A'
										WHEN COUNT(distinct family.resid_key) <![CDATA[>]]> 4 THEN 
												COUNT(distinct family.resid_key) END as data_cnt
							</if>
				    	from
	                			(
	                				select * from
	                				(
               							select * from 	srv_dt_familycensus_${year1}
               							where	1=1
               							and family_yn = 'Y'
               							<if test='household_type != null '>
											and rd_household_type in
									  	<foreach collection="household_type" item="household" open="(" separator="," close=")">
									 	 	#{household}
									  	</foreach>
								    </if>
	                				) family,
	                				(
	                					select	sufid,
	                					<if test='(adm_length  == "2" and low_search  == "1")'>
                							substr(tot_reg_cd, 1, 2) as tot_reg_cd
                						</if>
                						<if test='(adm_length  == "2" and low_search  == "0")or(adm_length  == "5" and low_search  == "1")'>
                							substr(tot_reg_cd, 1, 5) as tot_reg_cd
                						</if>
                						<if test='(adm_length  == "5" and low_search  == "0")or(adm_length  == "7" and low_search  == "1")'>
                							substr(tot_reg_cd, 1, 7) as tot_reg_cd
                						</if>
                						<if test='(adm_length  == "7" and low_search  == "0") or adm_length == "13" '>
                							tot_reg_cd
                						</if>						
	                					from	srv_pt_bd
	                					where tot_reg_cd like ${adm_cd} || '%'
	                				) bd
	                				where family.sufid = bd.sufid
	                			) family_pt,	
								(
	                				select * from
	                				( 
               							select * from srv_dt_housecensus_${year2}
               							where	1=1
               							and house_yn = 'Y'
										<if test='house_type != null '>
											and rd_resid_1_type in
											<foreach  collection="house_type" item="type" open="(" separator="," close=")">
										  		#{type}
											</foreach>
								    	</if>
								    	<if test='house_area_cd != null '>
											and house_area_cd in
											<foreach  collection="house_area_cd" item="house_area_type" open="(" separator="," close=")">
												#{house_area_type}
											</foreach>
										</if>
								    	<if test='house_use_prid_cd != null '>
									    	and house_use_prid_cd = #{house_use_prid_cd}
								    	</if>
	                				) house,
	                				( 
	                					select	sufid,
	                					<if test='(adm_length  == "2" and low_search  == "1")'>
                							substr(tot_reg_cd, 1, 2) as tot_reg_cd
                						</if>
                						<if test='(adm_length  == "2" and low_search  == "0")or(adm_length  == "5" and low_search  == "1")'>
                							substr(tot_reg_cd, 1, 5) as tot_reg_cd
                						</if>
                						<if test='(adm_length  == "5" and low_search  == "0")or(adm_length  == "7" and low_search  == "1")'>
                							substr(tot_reg_cd, 1, 7) as tot_reg_cd
                						</if>
                						<if test='(adm_length  == "7" and low_search  == "0") or adm_length == "13" '>
                							tot_reg_cd
                						</if>						
	                					from	srv_pt_bd
	                					where tot_reg_cd like ${adm_cd} || '%'
	                				) bd
	                				where house.sufid = bd.sufid
	                			) house_pt 
	           	 		where family_pt.resid_key = house_pt.resid_key
				    	group by family_pt.tot_reg_cd
					) AA
					<!-- 시도, 시군구일 경우 (전국, 집계구는 실행X) -->
					<if test='(adm_length  != "7" or low_search  == "1") and (adm_length  != "13") '>
							, (
							    select distinct
								    <if test='(adm_length  == "2" and low_search  == "0")or(adm_length  == "5" and low_search  == "1")'>
								    	sido_cd||sgg_cd as adm_cd,
										sgg_nm as adm_nm
									</if>
									<if test='(adm_length  == "5" and low_search  == "0")or(adm_length  == "7" and low_search  == "1")'>
										sido_cd||sgg_cd||emdong_cd as adm_cd,
										emdong_nm as adm_nm
									</if>
							    from srv_pg_admbord 
							    where base_year = #{bnd_year}
							    <if test='(adm_length  == "2" and low_search  == "0")or(adm_length  == "5" and low_search  == "1")'>
							    	and sido_cd = #{sido_cd}
							    </if>
							    <if test='(adm_length  == "5" and low_search  == "0")or(adm_length  == "7" and low_search  == "1")'>
									and sido_cd = #{sido_cd}
									and sgg_cd = #{sgg_cd}
								</if>
							) bord
						where	AA.adm_cd = bord.adm_cd
					</if>
		</if>
	</select>
	
	<!-- mng_s 2017. 10. 24 j.h.Seok 2015년 이후 등록센서스 결합조건 쿼리 추가 -->
	<select id="fusionstats_2015_mt" parameterType="hashmap" resultType="hashmap">
		<!-- 전국일 경우 -->
		<if test='adm_cd == null'>
			select bord.sido_cd as adm_cd,    
					bord.sido_nm adm_nm,        
					A.data_cnt  
			from 
					(
		    			select	substr(tot_reg_cd, 1, 2) sido_cd, 
	        				<if test='combine_base  == "population" '>
	        					CASE WHEN COUNT(*) <![CDATA[<=]]> 4 THEN 'N/A' 
	        							WHEN COUNT(*) <![CDATA[>]]> 4 THEN 
												COUNT(*) END as data_cnt
	        				</if>
	        				<if test='combine_base  == "household" '>
	        					CASE WHEN COUNT(distinct ppltn_family_join_key) <![CDATA[<=]]> 4 THEN 'N/A'
										WHEN COUNT(distinct ppltn_family_join_key) <![CDATA[>]]> 4 THEN 
												COUNT(distinct ppltn_family_join_key) END as data_cnt
	        				</if>
	        				<if test='combine_base  == "house" '>
								CASE WHEN COUNT(distinct resid_join_key) <![CDATA[<=]]> 4 THEN 'N/A'
										WHEN COUNT(distinct resid_join_key) <![CDATA[>]]> 4 THEN 
												COUNT(distinct resid_join_key) END as data_cnt
							</if>
		    			from 
		       		 			(
		            				select	ppl.sufid,
		                					family.adm_cd,
											family.ppltn_family_join_key,
		                					family.rd_tot_fmember_cnt,
											house.resid_join_key,
		                					bd.tot_reg_cd
		            				from
		            						srv_dt_ppltncensus_${year} with(tablock) ppl ,
											srv_dt_familycensus_${year} with(tablock) family,
											srv_dt_housecensus_${year} with(tablock) house,
											srv_pt_bd with(tablock) bd
									where
		 									ppl.ppltn_family_join_key = family.ppltn_family_join_key
											and family.resid_join_key = house.resid_join_key
											and ppl.sufid = bd.sufid 
											
	                						<if test='(fusion_query_type == "population_household_house") or (fusion_query_type == "population_house") or (fusion_query_type == "household_house")'>
	                							and house.house_yn = 'Y' 
	 										</if>
	                						<if test='(fusion_query_type == "population_household_house") or (fusion_query_type == "population_household") or (fusion_query_type == "household_house")'>
	                							and family.family_yn = 'Y'
	                						</if>
	                						<if test='(gender != "0") and (gender != null)'>
												and gender = #{gender}
											</if>
											<if test='age_from != null '>
												and age <![CDATA[>=]]> #{age_from}
												and age <![CDATA[<=]]> #{age_to}
											</if>
											<if test='household_type != null '>
												and rd_household_type in
											  	<foreach collection="household_type" item="household" open="(" separator="," close=")">
											 	 	#{household}
											  	</foreach>
										    </if>
											<if test='house_type != null '>
												and rd_resid_1_type in
												<foreach  collection="house_type" item="type" open="(" separator="," close=")">
												  	#{type}
												</foreach>
										    </if>
										    <if test='house_area_cd != null '>
												and house_area_cd in
												<foreach  collection="house_area_cd" item="house_area_type" open="(" separator="," close=")">
													#{house_area_type}
												</foreach>
											</if>
										    <if test='house_use_prid_cd != null '>
											    and house_use_prid_cd = #{house_use_prid_cd}
										    </if>
								)
						group by substr(tot_reg_cd, 1, 2)
					) A,
					(
						select sido_cd, sido_nm from srv_pg_sidobord where base_year = #{bnd_year}
					) bord
			where A.sido_cd = bord.sido_cd
		</if>
		
		<!-- 나머지 시도, 시군구, 읍면동일 경우 -->
		<if test='adm_cd != null'>
			select	AA.adm_cd,
					AA.data_cnt
				<if test='(adm_length  != "7" or low_search  == "1") and (adm_length  != "13") '>
					,bord.adm_nm
				</if>
			from
					(
				    	select	A.tot_reg_cd as adm_cd,
			        		<if test='combine_base  == "population" '>
	        					CASE WHEN COUNT(*) <![CDATA[<=]]> 4 THEN 'N/A' 
	        							WHEN COUNT(*) <![CDATA[>]]> 4 THEN 
												COUNT(*) END as data_cnt
	        				</if>
	        				<if test='combine_base  == "household" '>
	        					CASE WHEN COUNT(distinct B.ppltn_family_join_key) <![CDATA[<=]]> 4 THEN 'N/A'
										WHEN COUNT(distinct B.ppltn_family_join_key) <![CDATA[>]]> 4 THEN 
												COUNT(distinct B.ppltn_family_join_key) END as data_cnt
	        				</if>
	        				<if test='combine_base  == "house" '>
								CASE WHEN COUNT(distinct C.resid_join_key) <![CDATA[<=]]> 4 THEN 'N/A'
										WHEN COUNT(distinct C.resid_join_key) <![CDATA[>]]> 4 THEN 
												COUNT(distinct C.resid_join_key) END as data_cnt
							</if>
				    	from
				        		(
	                				select 	ppl.*
	                				, 			bd.sufid,
                						<if test='(adm_length  == "2" and low_search  == "1")'>
                							substr(bd.tot_reg_cd, 1, 2) as tot_reg_cd
                						</if>
                						<if test='(adm_length  == "2" and low_search  == "0")or(adm_length  == "5" and low_search  == "1")'>
                							substr(bd.tot_reg_cd, 1, 5) as tot_reg_cd
                						</if>
                						<if test='(adm_length  == "5" and low_search  == "0")or(adm_length  == "7" and low_search  == "1")'>
                							substr(bd.tot_reg_cd, 1, 7) as tot_reg_cd
                						</if>
                						<if test='(adm_length  == "7" and low_search  == "0") or adm_length == "13" '>
                							bd.tot_reg_cd
                						</if>													
									from		srv_dt_ppltncensus_${year} ppl,								
												(															
													select  	sufid,											
																tot_reg_cd										
													from    	srv_pt_bd										
													where   	tot_reg_cd like ${adm_cd} || '%'		 
												) bd							
									where ppl.sufid = bd.sufid							 
	                					<if test='(gender != "0") and (gender != null)'>
											and gender = #{gender}
										</if>
										<if test='age_from != null '>
											and age <![CDATA[>=]]> #{age_from}
											and age <![CDATA[<=]]> #{age_to}
										</if>
				        		) A,
				        		(
				            		select * 
				            		from
				                			(
				                				select * 
		                						from 	srv_dt_familycensus_${year} 
		                						where	1=1
		                						<if test='(fusion_query_type == "population_household_house") or (fusion_query_type == "population_household") or (fusion_query_type == "household_house")'>
		                							and family_yn = 'Y' 
		                						</if>
		                						<if test='household_type != null '>
													and rd_household_type in
												  	<foreach collection="household_type" item="household" open="(" separator="," close=")">
												 	 	#{household}
												  	</foreach>
											    </if>
				                			) family,
				                			(
				                				select	sufid
				                				from	srv_pt_bd
				                				where	tot_reg_cd like ${adm_cd} || '%'
				                			) bd
				           	 		where	family.sufid = bd.sufid
				        		) B,
				        		(
				            		select * 
				            		from
				                			(
				                				select * 
		                						from 	srv_dt_housecensus_${year} 
		                						where	1=1
		                						<if test='(fusion_query_type == "population_household_house") or (fusion_query_type == "population_house") or (fusion_query_type == "household_house")'>
		                							and house_yn = 'Y'
		 										</if>
												<if test='house_type != null '>
													and rd_resid_1_type in
													<foreach  collection="house_type" item="type" open="(" separator="," close=")">
													  	#{type}
													</foreach>
											    </if>
											    <if test='house_area_cd != null '>
													and house_area_cd in
													<foreach  collection="house_area_cd" item="house_area_type" open="(" separator="," close=")">
														#{house_area_type}
													</foreach>
												</if>
											    <if test='house_use_prid_cd != null '>
												    and house_use_prid_cd = #{house_use_prid_cd}
											    </if>
				                			) house,
				                			(
				                				select	sufid
				                				from	srv_pt_bd
				                				where	tot_reg_cd like ${adm_cd} || '%'
				                			) bd
				           	 		where	house.sufid = bd.sufid
				        		) C
				    	where	A.ppltn_family_join_key = B.ppltn_family_join_key
								and B.resid_join_key = C.resid_join_key 
				    	group by	A.tot_reg_cd
					) AA
					<!-- 시도, 시군구일 경우 (전국, 집계구는 실행X) -->
					<if test='(adm_length  != "7" or low_search  == "1") and (adm_length  != "13") '>
							, (
							    select distinct
								    <if test='(adm_length  == "2" and low_search  == "0")or(adm_length  == "5" and low_search  == "1")'>
								    	sido_cd||sgg_cd as adm_cd,
										sgg_nm as adm_nm
									</if>
									<if test='(adm_length  == "5" and low_search  == "0")or(adm_length  == "7" and low_search  == "1")'>
										sido_cd||sgg_cd||emdong_cd as adm_cd,
										emdong_nm as adm_nm
									</if>
							    from srv_pg_admbord 
							    where base_year = #{bnd_year}
							    <if test='(adm_length  == "2" and low_search  == "0")or(adm_length  == "5" and low_search  == "1")'>
							    	and sido_cd = #{sido_cd}
							    </if>
							    <if test='(adm_length  == "5" and low_search  == "0")or(adm_length  == "7" and low_search  == "1")'>
									and sido_cd = #{sido_cd}
									and sgg_cd = #{sgg_cd}
								</if>
							) bord
						where	AA.adm_cd = bord.adm_cd
					</if>
		</if>
	</select>

	
	<!-- 결합조건 (가구, 주택 결합일 경우) -->
	<select id="fusionstatsHouse_2015_mt" parameterType="hashmap" resultType="hashmap">
		<!-- 전국일 경우 -->
		<if test='adm_cd == null'>
			select bord.sido_cd as adm_cd,    
					bord.sido_nm adm_nm,        
					A.data_cnt  
			from 
					(
		    			select	substr(tot_reg_cd, 1, 2) sido_cd, 
	        				<if test='combine_base  == "household" '>
	        					CASE WHEN COUNT(distinct ppltn_family_join_key) <![CDATA[<=]]> 4 THEN 'N/A'
										WHEN COUNT(distinct ppltn_family_join_key) <![CDATA[>]]> 4 THEN 
												COUNT(distinct ppltn_family_join_key) END as data_cnt
	        				</if>
	        				<if test='combine_base  == "house" '>
								CASE WHEN COUNT(distinct resid_join_key) <![CDATA[<=]]> 4 THEN 'N/A'
										WHEN COUNT(distinct resid_join_key) <![CDATA[>]]> 4 THEN 
												COUNT(distinct resid_join_key) END as data_cnt
							</if>
		    			from 
		       		 			(
		            				select	family.sufid,
		                					family.adm_cd,
											family.ppltn_family_join_key,
		                					family.rd_tot_fmember_cnt,
											house.resid_join_key,
		                					bd.tot_reg_cd
		            				from
											srv_dt_familycensus_${year} with(nolock) family,
											srv_dt_housecensus_${year} with(nolock) house,
											srv_pt_bd with(tablock) bd
									where
		 									1=1
											and family.sufid = bd.sufid
											and family.resid_join_key = house.resid_join_key											
	                						and house.house_yn = 'Y' 
	                						and family.family_yn = 'Y'
											<if test='household_type != null '>
												and rd_household_type in
											  	<foreach collection="household_type" item="household" open="(" separator="," close=")">
											 	 	#{household}
											  	</foreach>
										    </if>
											<if test='house_type != null '>
												and rd_resid_1_type in
												<foreach  collection="house_type" item="type" open="(" separator="," close=")">
												  	#{type}
												</foreach>
										    </if>
										    <if test='house_area_cd != null '>
												and house_area_cd in
												<foreach  collection="house_area_cd" item="house_area_type" open="(" separator="," close=")">
													#{house_area_type}
												</foreach>
											</if>
										    <if test='house_use_prid_cd != null '>
											    and house_use_prid_cd = #{house_use_prid_cd}
										    </if>
								)
						group by substr(tot_reg_cd, 1, 2)
					) A,
					(
						select sido_cd, sido_nm from srv_pg_sidobord where base_year = #{bnd_year}
					) bord
			where A.sido_cd = bord.sido_cd
		</if>
		
		<!-- 나머지 시도, 시군구, 읍면동일 경우 -->
		<if test='adm_cd != null'>
			select	AA.adm_cd,
					AA.data_cnt
				<if test='(adm_length  != "7" or low_search  == "1") and (adm_length  != "13") '>
					,bord.adm_nm
				</if>
			from
					(
				    	select	family_pt.tot_reg_cd as adm_cd,
	        				<if test='combine_base  == "household" '>
	        					CASE WHEN COUNT(distinct ppltn_family_join_key) <![CDATA[<=]]> 4 THEN 'N/A'
										WHEN COUNT(distinct ppltn_family_join_key) <![CDATA[>]]> 4 THEN 
												COUNT(distinct ppltn_family_join_key) END as data_cnt
	        				</if>
	        				<if test='combine_base  == "house" '>
								CASE WHEN COUNT(distinct family.resid_join_key) <![CDATA[<=]]> 4 THEN 'N/A'
										WHEN COUNT(distinct family.resid_join_key) <![CDATA[>]]> 4 THEN 
												COUNT(distinct family.resid_join_key) END as data_cnt
							</if>
				    	from
	                			(
	                				select * from
	                				(
               							select * from 	srv_dt_familycensus_${year1}
               							where	1=1
               							and family_yn = 'Y'
               							<if test='household_type != null '>
											and rd_household_type in
									  	<foreach collection="household_type" item="household" open="(" separator="," close=")">
									 	 	#{household}
									  	</foreach>
								    </if>
	                				) family,
	                				(
	                					select	sufid,
	                					<if test='(adm_length  == "2" and low_search  == "1")'>
                							substr(tot_reg_cd, 1, 2) as tot_reg_cd
                						</if>
                						<if test='(adm_length  == "2" and low_search  == "0")or(adm_length  == "5" and low_search  == "1")'>
                							substr(tot_reg_cd, 1, 5) as tot_reg_cd
                						</if>
                						<if test='(adm_length  == "5" and low_search  == "0")or(adm_length  == "7" and low_search  == "1")'>
                							substr(tot_reg_cd, 1, 7) as tot_reg_cd
                						</if>
                						<if test='(adm_length  == "7" and low_search  == "0") or adm_length == "13" '>
                							tot_reg_cd
                						</if>						
	                					from	srv_pt_bd
	                					where tot_reg_cd like ${adm_cd} || '%'
	                				) bd
	                				where family.sufid = bd.sufid
	                			) family_pt,	
								(
	                				select * from
	                				( 
               							select * from srv_dt_housecensus_${year2}
               							where	1=1
               							and house_yn = 'Y'
										<if test='house_type != null '>
											and rd_resid_1_type in
											<foreach  collection="house_type" item="type" open="(" separator="," close=")">
										  		#{type}
											</foreach>
								    	</if>
								    	<if test='house_area_cd != null '>
											and house_area_cd in
											<foreach  collection="house_area_cd" item="house_area_type" open="(" separator="," close=")">
												#{house_area_type}
											</foreach>
										</if>
								    	<if test='house_use_prid_cd != null '>
									    	and house_use_prid_cd = #{house_use_prid_cd}
								    	</if>
	                				) house,
	                				( 
	                					select	sufid,
	                					<if test='(adm_length  == "2" and low_search  == "1")'>
                							substr(tot_reg_cd, 1, 2) as tot_reg_cd
                						</if>
                						<if test='(adm_length  == "2" and low_search  == "0")or(adm_length  == "5" and low_search  == "1")'>
                							substr(tot_reg_cd, 1, 5) as tot_reg_cd
                						</if>
                						<if test='(adm_length  == "5" and low_search  == "0")or(adm_length  == "7" and low_search  == "1")'>
                							substr(tot_reg_cd, 1, 7) as tot_reg_cd
                						</if>
                						<if test='(adm_length  == "7" and low_search  == "0") or adm_length == "13" '>
                							tot_reg_cd
                						</if>						
	                					from	srv_pt_bd
	                					where tot_reg_cd like ${adm_cd} || '%'
	                				) bd
	                				where house.sufid = bd.sufid
	                			) house_pt 
	           	 		where family_pt.resid_join_key = house_pt.resid_join_key
				    	group by family_pt.tot_reg_cd
					) AA
					<!-- 시도, 시군구일 경우 (전국, 집계구는 실행X) -->
					<if test='(adm_length  != "7" or low_search  == "1") and (adm_length  != "13") '>
							, (
							    select distinct
								    <if test='(adm_length  == "2" and low_search  == "0")or(adm_length  == "5" and low_search  == "1")'>
								    	sido_cd||sgg_cd as adm_cd,
										sgg_nm as adm_nm
									</if>
									<if test='(adm_length  == "5" and low_search  == "0")or(adm_length  == "7" and low_search  == "1")'>
										sido_cd||sgg_cd||emdong_cd as adm_cd,
										emdong_nm as adm_nm
									</if>
							    from srv_pg_admbord 
							    where base_year = #{bnd_year}
							    <if test='(adm_length  == "2" and low_search  == "0")or(adm_length  == "5" and low_search  == "1")'>
							    	and sido_cd = #{sido_cd}
							    </if>
							    <if test='(adm_length  == "5" and low_search  == "0")or(adm_length  == "7" and low_search  == "1")'>
									and sido_cd = #{sido_cd}
									and sgg_cd = #{sgg_cd}
								</if>
							) bord
						where	AA.adm_cd = bord.adm_cd
					</if>
		</if>
	</select>
	<!-- mng_e 2017. 10. 24 j.h.Seok 2015년 이후 등록센서스 결합조건 쿼리 추가 -->
</mapper>
